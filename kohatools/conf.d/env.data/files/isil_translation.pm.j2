# KohaLXC/kohatools (data+mmtenv); PP/MMT-configuration: TranslationTables
# file: $KOHALXC_TOOLDIR/ppmmtws/PerlMMT/TranslationTables/{{ item.name }}
{{ ansible_managed | comment }}

package TranslationTables::isil_translation;

use Modern::Perl;
use Carp qw(cluck);

#select the correct call number location according to the library id
our $isilMapJokunen = {
    1 => "FI-Jm",
    3 => "FI-Konti",
    4 => "FI-Outku",
    5 => "FI-Polvi",
    6 => "FI-Pyhas",
    8 => "FI-Juuka",
    9 => "FI-Lipri",
    10 => "FI-Eno",
};
our $isilMapPielinen = {
    1 => "FI-Nurme",
    2 => "FI-Liksa",
    3 => "FI-Iloma",
};

our $isilMapLappi = {	# organization: "kohalappi"
    1 => "FI-Rm",
    3 => "FI-Inari",
    4 => "FI-Kolku",
    5 => "FI-Sompi",
    6 => "FI-Salla",
    7 => "FI-Sompe",
    8 => "FI-Somsa",
    9 => "FI-Rteso",
    10 => "FI-Pello",
    11 => "FI-Ylito",
    12 => "FI-Utsjo",
    13 => "FI-Kemja",
    14 => "FI-TODOMED",	# Medicus/L채채ketieteen kirjasto
    15 => "FI-TODOMUS",	# Museokirjasto
    16 => "FI-TODOOPP",	# Oppilaitoskirjastot
    17 => "FI-Kitti",
    18 => "FI-TODOLLK",	# L채nsi-Lapin koulutuskuntayhtym채n kirjasto
    19 => "FI-Torni",
    20 => "FI-Muoni",
    21 => "FI-Enote",
    22 => "FI-YPKA",
    23 => "FI-Somso",
};

our $marcFieldToIsilMapJokunen = {
    "098" => "FI-Jm",
    "055" => "FI-Konti",
    "056" => "FI-Outku",
    "057" => "FI-Polvi",
    "058" => "FI-Pyhas",
    "053" => "FI-Juuka",
    "060" => "FI-Lipri",
    "064" => "FI-Eno",
};
our $marcFieldToIsilMapPielinen = {
    "098" => "DEFAULT_ISIL",
    "056" => "FI-Nurme",
    "055" => "FI-Iloma",
    "054" => "FI-Liksa",
};

our $marcFieldToIsilMapLappi = {  # organization: "kohalappi"
#    "098" => "FI-Rm",
    "098" => "DEFAULT_ISIL",
    "952" => "FI-Inari",
    "953" => "FI-Kolku",
    "955" => "FI-Salla",
    "956" => "FI-Sompe",
    "957" => "FI-Somsa",
    "958" => "FI-Pello",
    "959" => "FI-Ylito",
    "960" => "FI-Utsjo",
    "961" => "FI-Kemja",
    "963" => "FI-Kitti",
    "964" => "FI-Torni",
    "967" => "FI-Muoni",
    "966" => "FI-Enote",
    "954" => "FI-Somso",
};

sub GetIsil {
    my ($libid) = @_;

    my $isil;
    if ($CFG::CFG->{organization} eq 'pielinen') {
        $isil = $isilMapPielinen->{$libid};
    }
    elsif ($CFG::CFG->{organization} eq 'jokunen') {
        $isil = $isilMapJokunen->{$libid};
    }
    elsif ($CFG::CFG->{organization} eq 'kohalappi') {
        $isil = $isilMapLappi->{$libid};
    }
    else {
        cluck "No such organization '$CFG::CFG->{organization}' mapped!";
    }
    if ($isil) {
        return $isil;
    }
    else {
        cluck "No such library id '$libid' mapped!";
        return "";
    }
}
sub GetDefaultIsil {
    if ($CFG::CFG->{organization} eq 'pielinen') {
        return 'DEFAULT_ISIL'; #In pielinen, the default ISIL is not owned by anyone.
    }
    elsif ($CFG::CFG->{organization} eq 'jokunen') {
        return GetIsil(1); #In jokunen, the field 098 had the default isil and it was the same as Joensuu's call number.
    }
    elsif ($CFG::CFG->{organization} eq 'kohalappi') {
        return 'DEFAULT_ISIL'; # [TODO]; Correct for 'kohalappi'? ## MAY REQUIRE ATTENTION ##
#        return GetIsil(1); # [TODO]; Correct for 'kohalappi'? ## MAY REQUIRE ATTENTION ##
    }
}

sub GetField2Isil {
    my ($marcField) = @_;

    my $isil;
    if ($CFG::CFG->{organization} eq 'pielinen') {
        $isil = $marcFieldToIsilMapPielinen->{$marcField};
    }
    elsif ($CFG::CFG->{organization} eq 'jokunen') {
        $isil = $marcFieldToIsilMapJokunen->{$marcField};
    }
    elsif ($CFG::CFG->{organization} eq 'kohalappi') {
        $isil = $marcFieldToIsilMapLappi->{$marcField};
    }
    else {
        cluck "No such organization '$CFG::CFG->{organization}' mapped!";
    }
    if ($isil) {
        return $isil;
    }
    else {
        return undef;
    }
}