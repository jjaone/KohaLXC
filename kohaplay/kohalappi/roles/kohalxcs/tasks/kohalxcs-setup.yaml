---
# File: roles/kohalxcs/tasks/kohalxcs-setup.yaml
# #############################################################################
# Code is part of the KohaLXC/kohatools Ansible/Bash tooling environment
# for Koha/ILS-development, deployment & database conversion/migration tasks.
# Author: Jukka Aaltonen, Koha-Lappi, Rovaniemi City Library, Lapland/Finland.
# License: GNU General Public License version 3.
# 
# Description: setup tasks of Koha-related LXCs for dev/mdb/web/data envs
# - setup Koha-related LXCs environments in playbook inventories
# - ensure availability of all required distro packages and Perl-modules
# - 
# ##############################################################################

## Push/copy 'run_conversion' script to ConversionTools
# - TODO: mode="u+rwx,g+rx,o-rwx"
- name: ppmmt - Push containerized conversion main script to ConversionTools
  #become: yes
  template: >
    src="files/dataenv/run_conversion-perl_import_pl.sh.j2"
    dest="{{ kohalxcs_kohalxc_tooldir }}/ppmmtws/ConversionTools/run_conversion.sh"
    mode="u+x,g+rx"
    backup="no"
  when:
    - kohalxcs_ppmmtenv_enabled

## Ensure 'run_conversion' script is symlinked to container $HOME/bin
- name: ppmmt - Symlink conversion main script in container HOME/bin
  file: >
    src="{{ kohalxcs_kohalxc_tooldir }}/ppmmtws/ConversionTools/run_conversion.sh"
    dest="{{ '/home/'~ansible_user~'/bin/run_conversion' }}"
    state="link"
    force="yes"
  when:
    - kohalxcs_ppmmtenv_enabled

- debug: var=kohalxcs_dataenv_enabled,kohalxcs_ppmmtenv_enabled,kohalxcs_ppmmtenv_importchains,kohalxcs_ppmmtenv_polling,kohalxcs_origommtenv_enabled,kohalxcs_mmtenv_enabled,kohalxcs_mmtenv_migrateme
## Run conversion: main script
# - runs several hours, async by default, poll and timeout in seconds
- name: data+ppmmt - PP/MMT converting ({{kohalxcs_ppmmtenv_importchains}}) as 'lxc_config.xml' timeout in {{ 2 * (kohalxcs_ppmmtenv_timeout|int) // 60 }} mins
  environment:
    KOHALXC_TOOLDIR: "{{ kohalxcs_kohalxc_tooldir }}"
    KOHALXC_DATADIR: "{{ kohalxcs_dataenv_datadir }}"
  shell: |
    ls -l ~/bin/run_conversion;
    echo && echo "== START OF PP/MMT CONVERSION '{{ kohalxcs_ppmmtenv_importchains | d() }}': $(date +%Y%m%d_%H%M)" && echo;
    $HOME/bin/run_conversion lxc_config.xml {{ kohalxcs_ppmmtenv_importchains }} > /dev/null;
    [[ "0" == "$?" ]] && (head -35 $KOHALXC_TOOLDIR/ppmmtws/PerlMMT/logs/import_all.log; echo && echo "== ..CONVERTING.." && echo;)
  args:
    executable: /bin/bash
    chdir: "{{ '/home/'~ansible_user }}"
    creates: ~/bin/.run_conversion.finished
  async: "{{ 2 * (kohalxcs_ppmmtenv_timeout|int) }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_runconversion
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled
    - kohalxcs_ppmmtenv_importchains != ''

## Run conversion: check whether we are finished
- name: data+ppmmt - Is PP/MMT still converting ({{ 2* (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins)
  async_status: jid={{ job_runconversion.ansible_job_id }}
  register: cmd_runconversion_result
  until: cmd_runconversion_result.finished
  retries: "{{ 2* (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay | d(60) }}"
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled
    - kohalxcs_ppmmtenv_importchains != ''

#- debug: var=job_runconversion_result,kohalxcs_kohalxc_tooldir
## Run conversion: finish the run (split/show log per ImportChains
- name: data+ppmmt - PP/MMT conversion finished (split/show log by import-chains)
  environment:
    KOHALXC_TOOLDIR: "{{ kohalxcs_kohalxc_tooldir }}"
    KOHALXC_DATADIR: "{{ kohalxcs_dataenv_datadir }}"
  shell: |
    tail -30 $KOHALXC_TOOLDIR/ppmmtws/PerlMMT/logs/import_all.log
    echo && echo "== END OF PP/MMT CONVERSION '{{ kohalxcs_ppmmtenv_importchains | d() }}': $(date +%Y%m%d_%H%M)." && echo
    (cd $KOHALXC_DATADIR/source.0/logs && pwd && ls -l | grep '\-last\|\-previous' && echo)
    (cd $KOHALXC_DATADIR/source.0/target && pwd && ls -Csh && echo)
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled
    - kohalxcs_ppmmtenv_importchains != ''

## Make 'Staffaccounts' in addition to PP/MMT-Patrons
# - only if converting 'Patrons' & "kohlxcs_mmtenv_migrateme" has 'staffaccounts'
- name: data+ppmmt+(migrate) - Make Staff accounts for Koha (in addition to normal PatronsImportChain-conversion)
  environment:
    KOHALXC_TOOLDIR: "{{ kohalxcs_kohalxc_tooldir }}"
    KOHALXC_DATADIR: "{{ kohalxcs_dataenv_datadir }}"
  shell: |
    echo && echo "== ansible-kohalxc: Comment out below 'makeStaffAccouns.sh' (to ensure not overwriting 'testikoha' staffaccounts since 07.03.2017)"
    echo && ./makeStaffAccounts.sh Staffaccounts > /dev/null;
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_kohalxc_tooldir }}/ppmmtws/ConversionTools"
  register: cmd_staffaccounts
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled
    - ('patrons' in kohalxcs_ppmmtenv_importchains|lower)
    - ('staffaccounts' in kohalxcs_mmtenv_migrateme|lower)

## Build *.migrateme files: (skip Serial(s)Items for they have *.marc files)
# - Staffaccounts,Patrons,Biblios,Items,(Serials,)Holds,Checkouts,Fines
- name: data+ppmmt - Build '*.migrateme' from conv targets to insert them to Koha
  environment:
    KOHALXC_TOOLDIR: "{{ kohalxcs_kohalxc_tooldir }}"
    KOHALXC_DATADIR: "{{ kohalxcs_dataenv_datadir }}"
  shell: |
    pwd && ls -1sh
    for d in {{kohalxcs_ppmmtenv_importchains|replace(',',' ')|d()}}; do
      ([[ -d $d ]] && cd $d && echo "== $d in: $(pwd)" && [[ "Serials" != "$d" || "SerialItems" != "$d" ]] && rm -f ${d,,}.migrateme && ( [[ "Biblios" != "$d" ]] && cat 01_${d,,}* > ${d,,}.migrateme || cat 03_${d,,}* > ${d,,}.migrateme ) && ls -Csh --format=horizontal | grep -v "total" && echo -n "== $d lines: " && wc -l ${d,,}.migrateme || echo;)
    done
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}/source.0/target"
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled
    - kohalxcs_ppmmtenv_importchains != ''

## Database/status: 'patrons' and staffaccounts
# - could have "USE {{ kohalxcs_mdbenv_kohadb }}" in the sql, too
- name: koha+mdb - Show converted Patrons and Staff accounts that are in the db
  become: yes
  shell: |
    [[ -d Patrons ]] && ls -1shl Patrons && echo
    [[ -f Patrons/patrons.migrateme ]] && mysql -h {{ kohalxcs_mdbenv_dbhost }} -u {{ kohalxcs_mdbenv_kohauser }} --password={{ kohalxcs_mdbenv_kohapass }} {{ kohalxcs_mdbenv_kohadb }} -e 'SELECT userid,borrowernumber,cardnumber,branchcode,categorycode FROM borrowers WHERE categorycode <> "S" LIMIT 15;'
    [[ -d Staffaccounts ]] && ls -1shl Staffaccounts && echo
    [[ -f Staffaccounts/staffaccounts.migrateme ]] && mysql -h {{ kohalxcs_mdbenv_dbhost }} -u {{ kohalxcs_mdbenv_kohauser }} --password={{ kohalxcs_mdbenv_kohapass }} {{ kohalxcs_mdbenv_kohadb }} -e 'SELECT userid,borrowernumber,cardnumber,branchcode,categorycode FROM borrowers WHERE categorycode = "S" LIMIT 10;'; exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}/source.0/target"
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mdbenv_enabled
    - ('patrons' in kohalxcs_ppmmtenv_importchains|lower) or ('patrons' in kohalxcs_mmtenv_migrateme|lower) or ('staffaccounts' in kohalxcs_mmtenv_migrateme|lower)

## Push/copy KohaLXC/kohalxcs migration environment (mmtenv) customization scripts
- name: koha+mmt - Templatize some bulkImport scripts/settings for migration
  become: yes
  template: >
    src="files/kohaenv/{{ item.name }}.j2"
    dest="{{ kohalxcs_kohaenv_bindir }}/{{ item.dir }}/{{ item.name}}"
    owner="koha"
    group="{{ kohalxc_kohagrp_name }}"
    mode="u=rwx,g=rx,o=rx"
    backup="yes"
  with_items:
    - { name: bulkPatronImport.pl, dir: migration_tools }
    - { name: OplibMatcher.pm, dir: migration_tools }
    - { name: bulkItemImport.pl, dir: migration_tools }
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - kohalxc_kohagrp_name is defined
    - ('patrons' in kohalxcs_ppmmtenv_importchains|lower) or ('patrons' in kohalxcs_mmtenv_migrateme|lower) or ('staffaccounts' in kohalxcs_mmtenv_migrateme|lower) or ('biblios' in kohalxcs_mmtenv_migrateme|lower) or ('items' in kohalxcs_mmtenv_migrateme|lower) or ('serials' in kohalxcs_mmtenv_migrateme|lower)

## Migrate
# TODO: SQL for preserving db tables data before migrating:
# USE kohadata.system_preferences: system settings
# - SELECT * FROM kohadata.system_preferences;
# USE kohadata.branches: libraries
# - SELECT * FROM kohadata.branches;
# USE kohadata.letters: notifications and message templates
# - SELECT * FROM kohadata.letters;
#
# TODO: Empty/clean these dbtables (Patrons and other) data before migrating:
# USE kohadata.issues: all
# - DELETE FROM issues WHERE issue_id <> 0;
# USE kohadata.borrowers: non-staff Patrons
# - DELETE FROM borrowers WHERE categorycode <> 'S' AND borrowernumber <> 1;
# USE kohadata.branchtransfers: all
# - TRUNCATE TABLE branchtransfers;
# - DELETE FROM branchtransfers WHERE  itemnumber <> 0;
# USE kohadata.branchrelations
# - TRUNCATE TABLE branchrelations;
# USE kohadata.message_queue
# - DELETE FROM kohadata.message_queue WHERE borrowernumber <> 0;

## Migrate (Patrons+Staffaccounts): start..
# TODO: this takes so long that we need async handling of task here!!
- name: koha+mmt - Migrate (newly) converted Patrons and/or Staff accounts ({{ (kohalxcs_ppmmtenv_timeout|int) // 60 }} mins)
  become: yes
  shell: |
    [[ -d Patrons ]] && ls -1shl Patrons && echo "== ansible-kohalxc: Started migrating 'Patrons' on $(date +%Y%m%d_%H%M).."
    [[ -f Patrons/patrons.migrateme ]] && head -9 Patrons/patrons.migrateme && su -l koha -c "bulkPatronImport.pl --file /home/{{ansible_user}}/{{kohalxc_organization}}/kohadata/source.0/target/Patrons/patrons.migrateme --deduplicate &> log/bulkPatronImport-$(date +%Y%m%d_%H%M).log"
    [[ -d Staffaccounts ]] && ls -1shl Staffaccounts && echo "== ansible-kohalxc: Not migrating 'Staffaccounts' (for now)"
    #[[ -f Staffaccounts/staffaccounts.migrateme ]] && head -9 Staffaccounts/staffaccounts.migrateme && su -l koha -c "bulkPatronImport    head -3 Patrons/patrons.migrateme && head -3 Patrons/staffaccounts.migrateme.pl --file /home/{{ansible_user}}/{{kohalxc_organization}}/kohadata/source.0/target/Staffaccounts/staffaccounts.migrateme &> log/bulkPatronImport-staffaccounts_${date +%Y%m%d_%H%M).log"
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}/source.0/target"
  async: "{{ kohalxcs_ppmmtenv_timeout }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_migratepatrons
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('patrons' in kohalxcs_ppmmtenv_importchains|lower)
    - ('patrons' in kohalxcs_mmtenv_migrateme|lower) or ('staffaccounts' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (Patrons+Staffaccounts): .. are we finished yet?
- name: koha+mmt - Is 'Patrons' still migrating ({{ (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins)
  become: yes
  async_status: jid={{ job_migratepatrons.ansible_job_id }}
  register: cmd_migratepatrons_result
  until: cmd_migratepatrons_result.finished
  retries: "{{ (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay | d(60) }}"
  when:
    - job_migratepatrons is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('patrons' in kohalxcs_ppmmtenv_importchains|lower)
    - ('patrons' in kohalxcs_mmtenv_migrateme|lower) or ('staffaccounts' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (Biblios): bibliographic MarcXML data migration to Koha
- name: koha+mmt - Migrate converted Biblios ({{ 5 * (kohalxcs_ppmmtenv_timeout|int) // 60 }} mins)
  become: yes
  shell: |
    [[ -d Biblios ]] && ls -1shl Biblios && echo "== ansible-kohalxc: Started migrating 'Biblios' on $(date +%Y%m%d_%H%M).."
    [[ -f Biblios/biblios.migrateme ]] && head -3 Biblios/biblios.migrateme && su -l koha -c "bulkmarcimport.pl -v -b -commit 1000 -m MARCXML --file={{ kohalxcs_dataenv_datadir }}/source.0/target/Biblios/biblios.migrateme -l log/biblionumberConversionTable &> log/bulkmarcimport_biblios-$(date +%Y%m%d_%H%M).log"
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}//source.0/target"
  async: "{{ 5 * (kohalxcs_ppmmtenv_timeout|int) }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_migratebiblios
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('biblios' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (Biblios): .. are we finished yet?
- name: koha+mmt - Is 'Biblios' still migrating ({{ 5 * (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins)
  become: yes
  async_status: jid={{ job_migratebiblios.ansible_job_id }}
  register: cmd_migratebiblios_result
  until: cmd_migratebiblios_result.finished
  retries: "{{ 5 * (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ 2 * (kohalxcs_ppmmtenv_checkdelay|int) | d(120) }}"
  when:
    - job_migratebiblios is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('biblios' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (Serials): serials bibliographic MarcXML data migration to Koha
- name: koha+mmt - Migrate converted Serials ({{ 2 * (kohalxcs_ppmmtenv_timeout|int) // 60 }} mins)
  become: yes
  shell: |
    pwd && ls -la
    [[ -d Serials ]] && ls -1shl Serials && echo "== ansible-kohalxc: Started migrating 'Serials' on $(date +%Y%m%d_%H%M).."
    [[ -f Serials/serialmothers.marc ]] && head -3 Serials/serialmothers.marc && su -l koha -c "bulkmarcimport.pl -v -b -commit 1000 -m MARCXML --file={{ kohalxcs_dataenv_datadir }}/source.0/target/Serials/serialmothers.marc -l log/serialmothersnumberConversionTable &> log/bulkmarcimport_serialmothers-$(date +%Y%m%d_%H%M).log"
    [[ -f Serials/serials.marc ]] && head -3 Serials/serials.marc && su -l koha -c "bulkmarcimport.pl -v -b -commit 1000 -m MARCXML --file={{ kohalxcs_dataenv_datadir }}/source.0/target/Serials/serials.marc -l log/serialsnumberConversionTable &> log/bulkmarcimport_serials-$(date +%Y%m%d_%H%M).log"
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}//source.0/target"
  async: "{{ 2 * kohalxcs_ppmmtenv_timeout }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_migrateserials
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('serials' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (Serials): .. are we finished yet?
- name: koha+mmt - Is 'Serials' still migrating ({{ 2 * (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins)
  become: yes
  async_status: jid={{ job_migrateserials.ansible_job_id }}
  register: cmd_migrateserials_result
  until: cmd_migrateserials_result.finished
  retries: "{{ 2 * (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay | d(60) }}"
  when:
    - job_migrateserials is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('serials' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (Items): library Items linked to bibliographic ('Biblios') MarcXML
- name: koha+mmt - Migrate converted Items ({{ 2 * (kohalxcs_ppmmtenv_timeout|int) // 60 }} mins)
  become: yes
  shell: |
    [[ -d Items ]] && ls -1shl Items && echo "== ansible-kohalxc: Started migrating 'Items' on $(date +%Y%m%d_%H%M).."
    [[ -f Items/items.migrateme ]] && head -3 Items/items.migrateme && su -l koha -c "bulkItemImport.pl -v --bnConversionTable log/biblionumberConversionTable --inConversionTable log/itemnumberConversionTable --file={{ kohalxcs_dataenv_datadir }}/source.0/target/Items/items.migrateme &> log/bulkItemImport-$(date +%Y%m%d_%H%M).log"
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}//source.0/target"
  async: "{{ 2 * (kohalxcs_ppmmtenv_timeout|int) }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_migrateitems
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('items' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (Items): .. are we finished yet?
- name: koha+mmt - Is 'Items' still migrating ({{ 2 * (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins)
  become: yes
  async_status: jid={{ job_migrateitems.ansible_job_id }}
  register: cmd_migrateitems_result
  until: cmd_migrateitems_result.finished
  retries: "{{ 2 * (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay | d(60) }}"
  when:
    - job_migrateitems is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('items' in kohalxcs_mmtenv_migrateme|lower)

#- debug: var=kohalxcs_kohaenv_enabled,kohalxcs_ppmmtenv_enabled,kohalxcs_mmtenv_enabled,kohalxcs_mmtenv_migrateme
## Zebra: rebuild index
- name: koha+mmt - Rebuild Zebra index for Koha ({{ (kohalxcs_ppmmtenv_timeout|int) // 60 }} mins)
  become: yes
  #become_user: koha
  shell: |
    pwd && echo "== ansible-kohalxc: Rebuild and Start Zebra index for Koha ==";
    service koha-zebra-daemon stop
    ln -s -f /usr/share/koha/bin/koha-zebra-ctl.sh /etc/init.d/koha-zebra-daemon
    update-rc.d koha-zebra-daemon defaults
    su -l koha -c "ps aux | grep 'koha-zebra-ctl' | grep -v grep && service koha-zebra-daemon restart || service koha-zebra-daemon start"
    chown koha -R /var/lib/koha
    su -l koha -c "/usr/share/koha/bin/migration_tools/rebuild_zebra.pl -a -b -r -v -x"
    echo && echo "== ansible-kohalxc: Zebra index rebuild done."
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}"
  async: "{{ kohalxcs_ppmmtenv_timeout }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_rebuildidx
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ( ('biblios' in kohalxcs_ppmmtenv_importchains|lower) and ('biblios' in kohalxcs_mmtenv_migrateme|lower) ) or ( ('items' in kohalxcs_ppmmtenv_importchains|lower) and ('items' in kohalxcs_mmtenv_migrateme|lower) ) or ( ('serials' in kohalxcs_ppmmtenv_importchains|lower) and ('serials' in kohalxcs_mmtenv_migrateme|lower) )

#- debug: var=kohalxcs_ppmmtenv_timeout,kohalxcs_ppmmtenv_checkdelay,kohalxcs_ppmmtenv_checkfinished
## Zebra rebuild: check whether we are finished
- name: koha+mmt - Is Biblios/Zebra index still building ({{ (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins)
  become: yes
  async_status: jid={{ job_rebuildidx.ansible_job_id }}
  register: cmd_rebuildidx_result
  until: cmd_rebuildidx_result.finished
  retries: "{{ (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  when:
    - job_rebuildidx is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('biblios' in kohalxcs_mmtenv_migrateme|lower) or ('items' in kohalxcs_mmtenv_migrateme|lower) or ('serials' in kohalxcs_mmtenv_migrateme)

##
## Koha/webapp-setup after this point => TODO: move to kohaenv-setup.yaml
##

## Configure SMTP server for sending mail (postfix)
#TODO: if needed specify relay host/sasl config at the end of '/etc/postfix/main.cf':
#relayhost=smtp.gmail.com:587
#smtp_use_tls = yes
#smtp_sasl_auth_enable = yes
#smtp_sasl_security_options =
#smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
#smtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt in '/etc/postfix/sasl_passwd':
#[smtp.gmail.com]:587 user@gmail.com:passwd
# - generate the lookup-db: "sudo postmap /etc/postfix/sasl_passwd
- name: koha - Configure SMTP server for sending mail (postfix)
  become: yes
  lineinfile:
    dest: /etc/postfix/main.cf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
    backup: yes
  with_items:
    - { regexp: '^(myhostname =)(.*)', line: '\1 {{ kohalxcs_kohaenv_srvname }}' }
    - { regexp: '^(mydestination =)( .*{{ hostnode_kohaenv_srvdomain }},)(.*)', line: '\1 {{ kohalxcs_kohaenv_srvname }},\3' }
    - { regexp: '^(inet_interfaces =)(.*)', line: '\1 localhost' }
    #- { regexp: '^(#myorigin =)(.*)', line: '\1\2' }
    #- { regexp: '^(relayhost =)(.*)', line: '\1 [smtp.gmail.com]:587' }
  when:
    - kohalxcs_kohaenv_enabled

## Set the From/sender address fro SMTP/postfix
- name: koha - Set SMTP server From(sender) address in canonical map
  become: yes
  shell: |
    echo "@$(hostname) no-reply@{{ kohalxcs_kohaenv_srvname }}" > /etc/postfix/canonical;
    postmap /etc/postfix/canonical;
  when:
    - kohalxcs_kohaenv_enabled

## Configure SMTP/postifix to rewrite From/sender address to mails
- name: koha - Configure SMTP server/postfix From(sender) address
  become: yes
  blockinfile:
    dest: /etc/postfix/main.cf
    insertafter: EOF
    content: |
      sender_canonical_maps = hash:/etc/postfix/canonical
  when:
    - kohalxcs_kohaenv_enabled
  notify: Restart smtp

## Use templatized koha-conf.xml to configure this Koha-instance
- name: koha - Templatized main Koha configuration
  become: yes
  template: >
    src="files/kohaenv/koha-conf.xml.j2"
    dest="{{ kohalxcs_kohaenv_confdir }}/koha-conf.xml"
    mode="u=rw,g=r,o=r"
    owner="koha"
    group="{{ kohalxc_kohagrp_name }}"
    backup="yes"
  when:
    - kohalxcs_kohaenv_enabled
  notify: Restart webserver

- debug: var=hostnode_kohaenv_srvname,kohalxcs_kohaenv_enabled,kohalxcs_kohaenv_srvname,kohalxcs_kohaenv_https,kohalxcs_kohaenv_sslle,kohalxc_organization
## Install LetsEncrypt/certbot client for SSL-certificates
- name: koha+ssl - Install LetsEncrypt from Git for SSL-certificate generation
  become: yes
  shell: mkdir -p /opt/letsencrypt && git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt &% cd /etc/letsencrypt && ./letsencrypt-auto certonly --email {{ kohalxcs_kohaenv_srvadmin | d() }} --apache -d {{ kohalxcs_kohaenv_srvname }}
  args:
    chdir: /opt
    executable: /bin/bash
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_kohaenv_https
    - kohalxcs_kohaenv_sslle

## Configure Koha(Apache2) OPAC and Intranet for https
- name: koha+ssl - Generate Koha/Apache2 https config (only if 'kohaenv_srvname' is set)
  become: yes
  #become_user: koha
  template: >
    src="files/kohaenv/{{ kohalxc_organization|lower }}-https.conf.j2"
    dest="{{ kohalxcs_kohaenv_confdir }}/{{ kohalxc_organization|lower }}-https.conf"
    mode="u=rw,g=r,o=r"
    owner="koha"
    group="koha"
    backup="yes"
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxc_organization is defined
    - kohalxcs_kohaenv_https and kohalxcs_kohaenv_srvname

- name: koha+ssl - Make available our SSL-site configuration in Koha/Apache2
  become: yes
  shell: ln -s -f {{ kohalxcs_kohaenv_confdir }}/{{ kohalxc_organization|lower }}-https.conf /etc/apache2/sites-available/koha-ssl.conf
  #shell: service apache stop && a2enmod ssl && a2dissite koha.conf && ln -s -f /etc/koha/{{ kohalxc_organization | lower }}-https.conf /etc/apache2/sites-enabled/koha-ssl.conf && service apache2 restart
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxc_organization is defined
    - kohalxcs_kohaenv_https and kohalxcs_kohaenv_srvname

## Generate SSL-certificate (self-signed)
- name: koha+ssl - Generate server.key and self-signed SSL-certificate for Koha/Apache2
  become: yes
  shell: mkdir -p /etc/apache2/ssl && openssl genrsa -des3 -passout pass:x -out /tmp/server.pass.key 2048 && openssl rsa -passin pass:x -in /tmp/server.pass.key -out /tmp/server.key && rm -f /tmp/server.pass.key && openssl req -new -subj "/C=FI/ST={{ hostnode_environment | d('local') }}/L={{ kohalxc_organization }}/O={{ kohalxcs_kohaenv_srvtitle | d('Koha Library') }}/OU={{ kohalxc_organization }} ({{ hostnode_environment | d('local') }})/CN={{ kohalxcs_kohaenv_srvname | d('localhost') }}" -key /tmp/server.key -out /tmp/server.csr && openssl x509 -req -sha256 -days 365 -in /tmp/server.csr -signkey /tmp/server.key -out /etc/apache2/ssl/server.crt && cp -vpf /tmp/server.key /etc/apache2/ssl/. && rm -f /tmp/server.*
  args:
    executable: /bin/bash
    chdir: /tmp
    creates: /etc/apache2/ssl/server.crt
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxc_organization is defined
    - kohalxcs_kohaenv_https and kohalxcs_kohaenv_srvname
    - (kohalxcs_kohaenv_sslle is not defined) or (not kohalxcs_kohaenv_sslle)

- name: koha+ssl - Enable SSL (switch to https) restart Koha/Apache2
  become: yes
  shell: service apache2 stop && a2dissite koha.conf && a2enmod ssl && a2ensite koha-ssl.conf
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_kohaenv_https and kohalxcs_kohaenv_srvname
  notify: Restart webserver

## Cronjobs for cheduled tasks: user 'koha' w/ $KOHA_CRONJOB_TRIGGER wrapper:
#  - "cronjobs/process_message_queue.pl -v"
#  - "migration_tools/rebuild_zebra.pl -a -b -x -z -v"
- name: koha - Add cronjob(s) for Koha
  become: yes
  cron:
    user: koha
    name: "{{ item.name }}"
    job: "$KOHA_CRONJOB_TRIGGER {{ kohalxcs_kohaenv_bindir }}/{{ item.job }}"
    day: "{{ item.day | d('*') }}"
    hour: "{{ item.hour | d('*') }}"
    minute: "{{ item.minute | d('*') }}"
    state: present
  with_items:
    - { name: "process_message_queue", job: "cronjobs/process_message_queue.pl -v" }
    - { name: "rebuild_zebra", job: "migration_tools/rebuild_zebra.pl -a -b -x -z -v", minute: "*/1" }
    - { name: "cleanup_database", job: "cronjobs/cleanup_database -v --sessions --sessdays 7 --zebraqueue 7 --mail 7 --logs 7", hour: "3" }
  when:
    - kohalxcs_kohaenv_enabled

## !! For debug/dev FAIL here on purpose..!! ##
#- fail:
