---
# File: roles/kohalxcs/tasks/kohalxcs-setup.yaml
# #############################################################################
# Code is part of the KohaLXC/kohatools Ansible/Bash tooling environment
# for Koha/ILS-development, deployment & database conversion/migration tasks.
# Author: Jukka Aaltonen, Koha-Lappi, Rovaniemi City Library, Lapland/Finland.
# License: GNU General Public License version 3.
# 
# Description: setup tasks of Koha-related LXCs for dev/mdb/web/data envs
# - setup Koha-related LXCs environments in playbook inventories
# - ensure availability of all required distro packages and Perl-modules
# - 
# ##############################################################################

- debug: var=inventory_hostname,hostnode_environment,kohalxc_tooldir,kohalxcs_kohalxc_tooldir

## Read ansible_facts from target ansible localized folder: /etc/ansible/facts.d
- name: setup - Read LXC env facts (ansible_local/{{inventory_hostname}}).lxc_group
  #become:
  setup: >
    fact_path="{{ kohalxcs_kohalxc_tooldir }}/conf.d/env.data/lxcs/{{inventory_hostname}}/config"
    filter="ansible_local"
- debug: var=ansible_local

## Set this LXC-environment enablements based on above facts
- name: setup - Set the LXC-environments based on local facts (if any)
  vars:
    #lxc_name: "{{ inventory_hostname.split('.')[0] | d('default') }}"
    lxcg: "{{ ansible_local[inventory_hostname.split('.')[0] | d('default')].lxc_group }}"
  set_fact:
    kohalxcs_devenv_enabled: "{{ lxcg.devenv_enabled | d(false) }}"
    kohalxcs_dataenv_enabled: "{{ lxcg.dataenv_enabled | d(false) }}"
    kohalxcs_mmtenv_enabled: "{{ lxcg.mmtenv_enabled | d(false) }}"
    kohalxcs_ppmmtenv_enabled: "{{ lxcg.ppmmtenv_enabled | d(false) }}"
    kohalxcs_origommtenv_enabled: "{{ lxcg.origommtenv_enabld | d(false) }}"
    kohalxcs_mdbvenv_enabled: "{{ lxcg.mdbenv_enabled | d(false) }}"
    kohalxcs_kohaenv_enabled: "{{ lxcg.kohaenv_enabled | d(false) }}"
#- debug: var=kohalxcs_devenv_enabled,kohalxcs_dataenv_enabled,kohalxcs_mmtenv_enabled,kohalxcs_ppmmtenv_enabled,kohalxcs_origommtenv_enabled,kohalxcs_mdbvenv_enabled,kohalxcs_kohaenv_enabled

#- debug: var=kohalxcs_devenv_pckgs,kohalxcs_dataenv_pckgs
## Ensure {dev,data}env.* pckgs are installed (if respective env is enabled)
- name: devenv/dataenv - Ensure dev + data environment packages are installed
  become: yes
  apt: >
    name="{{ item }}"
    update_cache="yes"
    state="present"
    autoremove="yes"
  with_flattened:
    - "{{ (kohalxcs_devenv_enabled) | ternary(kohalxcs_devenv_pckgs, '') }}"
    - "{{ (kohalxcs_dataenv_enabled) | ternary(kohalxcs_dataenv_pckgs, '' ) }}"
  when:
    - kohalxcs_devenv_enabled or kohalxcs_dataenv_enabled
    - item is defined and item != ''

## Ensure koha-group exists in the lXC
- name: setup - Ensure we have a koha-user group
  become: yes
  group: >
    name={{ kohalxc_kohagrp_name }}
    gid={{ kohalxc_kohagrp_id }}
    state=present
  when:
    - kohalxc_kohagrp_name is defined
    - kohalxc_kohagrp_id is defined

## Ensure kohaoper ('ubuntu') belongs to koha-group and has ssh-keys
- name: setup - Ensure LXC-operuser has ssh-keys and belongs to koha-group
  become: yes
  user: >
    name="{{ kohalxc_operuser }}"
    uid="{{ kohalxc_operid }}"
    groups="{{ kohalxc_kohagrp_name | d(hostnode_kohagrp_name) }}"
    append="yes"
    generate_ssh_key="yes"
    comment="Koha/LXC kohaoper user"
  when:
    - kohalxc_operuser is defined
    - kohalxc_operid is defined
    - kohalxc_kohagrp_name is defined

## Ensure kohalxc_operuser(khaoper/HOME) has required dirs
- name: setup - Ensure LXC-operuser has dirs for scripts and logs
  file: >
    path="/home/{{ kohalxc_operuser }}/{{ item }}"
    state="directory"
  with_items:
    - bin
    - log
  when:
    - kohalxc_operuser is defined

## Push/copy 'run_conversion' script to ConversionTools
# - TODO: mode="u+rwx,g+rx,o-rwx"
- name: mmtenv - Push containerized conversion main script to ConversionTools
  #become: yes
  template: >
    src="files/dataenv/run_conversion-perl_import_pl.sh.j2"
    dest="{{ kohalxcs_kohalxc_tooldir }}/ppmmtws/ConversionTools/run_conversion.sh"
    mode="u+x,g+rx"
    backup="no"
  when:
    - kohalxcs_ppmmtenv_enabled

## Ensure 'run_conversion' script is symlinked to container $HOME/bin
- name: mmtenv - Symlink conversion main script in container HOME/bin
  file: >
    src="{{ kohalxcs_kohalxc_tooldir }}/ppmmtws/ConversionTools/run_conversion.sh"
    dest="{{ '/home/'~ansible_user~'/bin/run_conversion' }}"
    state="link"
    force="yes"
  when:
    - kohalxcs_ppmmtenv_enabled

- debug: var=kohalxcs_ppmmtenv_enabled,kohalxcs_ppmmtenv_runconv,kohalxcs_ppmmtenv_runconv_importchains,hostnode_ppmmtenv_importchains
## Run conversion: main script
# - script might run very long time, poll every half a minute, timeout in seconds
- name: data+ppmmtenv - Start main conversion script using 'lxc_config' for '{{ kohalxcs_ppmmtenv_runconv_importchains | d('all') }}' (max {{ (kohalxcs_ppmmtenv_runconv_timeout | d(3600) | int) // 3600 }} hours)
  environment:
    KOHALXC_TOOLDIR: "{{ kohalxcs_kohalxc_tooldir }}"
    KOHALXC_DATADIR: "{{ '/home/'~ansible_user~'/KohaLappi/kohadata' }}"
  shell: |
    ls -l ~/bin/run_conversion;
    echo && echo "== START OF PP/MMT CONVERSION.." && echo;
    $HOME/bin/run_conversion lxc_config.xml {{ kohalxcs_ppmmtenv_runconv_importchains | d() }} > /dev/null;
    head -35 $KOHALXC_TOOLDIR/ppmmtws/PerlMMT/logs/import_all.log;
    echo && echo "== ..CONVERTING.." && echo;
  args:
    chdir: "{{ '/home/'~ansible_user }}"
    creates: ~/bin/.run_conversion.finished
  async: "{{ kohalxcs_ppmmtenv_runconv_timeout | d(3600) }}"
  poll: "{{ kohalxcs_ppmmtenv_runconv_polling | d(0) }}"
  register: job_runconversion
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled
    - kohalxcs_ppmmtenv_runconv_importchains is defined
    - kohalxcs_ppmmtenv_runconv_importchains != ''
  #- kohalxcs_ppmmtenv_runconv is defined and kohalxcs_ppmmtenv_runconv

## Run conversion: check whether we are finished
- name: data+ppmmtenv - Check whether conversion run has finisihed..
  async_status: jid={{ job_runconversion.ansible_job_id }}
  register: cmd_runconversion_result
  until: cmd_runconversion_result.finished
  retries: "{{ kohalxcs_ppmmtenv_runconv_checkfinished | d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_runconv_checkdelay | d(5) }}"
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled
    - kohalxcs_ppmmtenv_runconv_importchains is defined
    - kohalxcs_ppmmtenv_runconv_importchains != ''
    #- kohalxcs_ppmmtenv_runconv is defined and kohalxcs_ppmmtenv_runconv

- debug: var=cmd_runconversion_result,kohalxcs_kohalxc_tooldir
## Run conversion: finish the run, split log per ImportChain(s)
- name: data+ppmmtenv - Finish conversion run (split/show log by import-chains)
  environment:
    KOHALXC_TOOLDIR: "{{ kohalxcs_kohalxc_tooldir }}"
    KOHALXC_DATADIR: "{{ '/home/'~ansible_user~'/KohaLappi/kohadata' }}"
  shell: |
    tail -30 $KOHALXC_TOOLDIR/ppmmtws/PerlMMT/logs/import_all.log
    echo && echo "== END OF PP/MMT CONVERSION." && echo
    (cd $KOHALXC_DATADIR/source.0/logs && pwd && ls -l && echo)
    (cd $KOHALXC_DATADIR/source.0/target && pwd && ls -Csh && echo)
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled
    - kohalxcs_ppmmtenv_runconv_importchains is defined
    - kohalxcs_ppmmtenv_runconv_importchains != ''
    #- kohalxcs_ppmmtenv_runconv is defined and kohalxcs_ppmmtenv_runconv|bool

## Make Staff Accounts for PP//MMT-Patrons
- name: data+ppmmtenv - Make staff accounts for PatronsImportChain Koha-migration
  environment:
    KOHALXC_TOOLDIR: "{{ kohalxcs_kohalxc_tooldir }}"
    KOHALXC_DATADIR: "{{ '/home/'~ansible_user~'/KohaLappi/kohadata' }}"
  shell: |
    echo && ./makeStaffAccounts.sh > /dev/null;
    #cat $KOHALXC_DATADIR/source.0/target/Patrons/staffaccounts/givenusernames.txt;
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_kohalxc_tooldir }}/ppmmtws/ConversionTools"
    #creates: $KOHALXC_DATADIR/source.o/target/Patrons/staffaccounts/givenusernames.txt;
  register: cmd_staffaccounts
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled

## Run conversion: build '{Patrons,Biblios,Items,Holds,Checkouts,Fines}.migrateme' files
- name: data+ppmmtenv - Build '*.migrateme' files for insertation to Koha
  environment:
    KOHALXC_TOOLDIR: "{{ kohalxcs_kohalxc_tooldir }}"
    KOHALXC_DATADIR: "{{ '/home/'~ansible_user~'/KohaLappi/kohadata' }}"
  shell: |
    ls -1sh && for d in Patrons Biblios Items Holds Checkouts Fines
    do
       ([[ -d $d ]] && cd $d && echo && echo "== $d: $(pwd)" && rm -f ${d,,}.migrateme && cat 01_${d,,}* > ${d,,}.migrateme && find */ -maxdepth 1 -name '*.migrateme' -exec cp -vp {} . \; 2>/dev/null; ls -Csh --format=horizontal | grep -v "total" && echo -n "== $d lines: " && wc -l ${d,,}.migrateme || echo);
    done
  args:
    executable: /bin/bash
    chdir: "{{ '/home/'~ansible_user~'/KohaLappi/kohadata' }}/source.0/target" 
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled

## Configure Koha(Apache2) OPAC and Intranet for https
#- name: Configure Koha/Apache2 for https
#  template: >
#    src="files/kohaenv/koha-https.conf.j2"
#    dest="/etc/koha/koha-https.conf"
#    mode="u=rw,g=r,o=rwx"
#    backup="no"
#  when:
#    - kohalxcs_kohaenv_enabled

## !! For debug/dev FAIL here on purpose..!! ##
#- fail:
