---
# File: roles/kohalxcs/tasks/kohalxcs-setup.yaml
# #############################################################################
# Code is part of the KohaLXC/kohatools Ansible/Bash tooling environment
# for Koha/ILS-development, deployment & database conversion/migration tasks.
# Author: Jukka Aaltonen, Koha-Lappi, Rovaniemi City Library, Lapland/Finland.
# License: GNU General Public License version 3.
# 
# Description: setup tasks of Koha-related LXCs for dev/mdb/web/data envs
# - setup Koha-related LXCs environments in playbook inventories
# - ensure availability of all required distro packages and Perl-modules
# - 
# ##############################################################################

## Push/copy 'run_conversion' script to ConversionTools
# - TODO: mode="u+rwx,g+rx,o-rwx"
- name: ppmmt - Push containerized conversion main script to ConversionTools
  #become: yes
  template: >
    src="files/dataenv/run_conversion-perl_import_pl.sh.j2"
    dest="{{ kohalxcs_kohalxc_tooldir }}/ppmmtws/ConversionTools/run_conversion.sh"
    mode="u+x,g+rx"
    backup="no"
  when:
    - kohalxcs_ppmmtenv_enabled

## Ensure 'run_conversion' script is symlinked to container $HOME/bin
- name: ppmmt - Symlink conversion main script in container HOME/bin
  file: >
    src="{{ kohalxcs_kohalxc_tooldir }}/ppmmtws/ConversionTools/run_conversion.sh"
    dest="{{ '/home/'~ansible_user~'/bin/run_conversion' }}"
    state="link"
    force="yes"
  when:
    - kohalxcs_ppmmtenv_enabled

- debug: var=kohalxcs_mdbenv_enabled,kohalxcs_kohaenv_enabled,kohalxcs_dataenv_enabled,kohalxcs_ppmmtenv_enabled,kohalxcs_ppmmtenv_importchains,kohalxcs_ppmmtenv_polling,kohalxcs_origommtenv_enabled,kohalxcs_mmtenv_enabled,kohalxcs_mmtenv_migrateme
## Run conversion: main script
# - runs several hours, async by default, poll and timeout in seconds
- name: data+ppmmt - Start PP/MMT conversion of '{{kohalxcs_ppmmtenv_importchains}}' as 'lxc_config.xml' ({{ 2 * (kohalxcs_ppmmtenv_timeout|int) // 60 }} mins)
  environment:
    KOHALXC_TOOLDIR: "{{ kohalxcs_kohalxc_tooldir }}"
    KOHALXC_DATADIR: "{{ kohalxcs_dataenv_datadir }}"
  shell: |
    ls -l ~/bin/run_conversion;
    echo && echo "== START PP/MMT CONVERSION '{{ kohalxcs_ppmmtenv_importchains | d() }}': $(date +%Y%m%d_%H%M)" && echo;
    $HOME/bin/run_conversion lxc_config.xml {{ kohalxcs_ppmmtenv_importchains }} > /dev/null;
    [[ "0" == "$?" ]] && (head -35 $KOHALXC_TOOLDIR/ppmmtws/PerlMMT/logs/import_all.log; echo && echo "== ..CONVERTING.." && echo;)
  args:
    executable: /bin/bash
    chdir: "{{ '/home/'~ansible_user }}"
    creates: ~/bin/.run_conversion.finished
  async: "{{ 2 * (kohalxcs_ppmmtenv_timeout|int) }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_runconversion
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled
    - kohalxcs_ppmmtenv_importchains != ''

## Run conversion: check whether we are finished
- name: data+ppmmt - Still in PP/MMT conversion of '{{kohalxcs_ppmmtenv_importchains}}' ({{ 2* (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins) ?
  async_status: jid={{ job_runconversion.ansible_job_id }}
  register: cmd_runconversion
  until: cmd_runconversion.finished
  retries: "{{ 2* (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay | d(60) }}"
  when:
    - job_runconversion is defined
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled
    - kohalxcs_ppmmtenv_importchains != ''

#- debug: var=job_runconversion,cmd_runconversion
## Post conversion: finish conv. + tweaks and split/show log by ImportChain
- name: data+ppmmt - Start post-PP/MMT tasks for '{{kohalxcs_ppmmtenv_importchains}}' ({{ kohalxcs_ppmmtenv_timeout|int // (2 * kohalxcs_ppmmtenv_checkdelay|d(60)) }} mins)
  environment:
    KOHALXC_TOOLDIR: "{{ kohalxcs_kohalxc_tooldir }}"
    KOHALXC_DATADIR: "{{ kohalxcs_dataenv_datadir }}"
  shell: |
    for d in {{kohalxcs_ppmmtenv_importchains|replace(',',' ')|d()}}; do
      case "${d,,}" in
        patrons)
          (cd target/Patrons &&
            for f in 01_patrons*; do
              $KOHALXC_TOOLDIR/ppmmtws/ConversionTools/addothernames.sh $f > tmp.$f && mv tmp.$f $f
            done) ;;
        *) ;;
      esac
    done
    [[ -f $KOHALXC_TOOLDIR/ppmmtws/PerlMMT/logs/import_all.log ]] &&
    tail -30 $KOHALXC_TOOLDIR/ppmmtws/PerlMMT/logs/import_all.log;
    echo && echo "== END OF PP/MMT CONVERSION '{{ kohalxcs_ppmmtenv_importchains | d() }}': $(date +%Y%m%d_%H%M)." && echo
    (cd logs && pwd && ls -l | grep '\-last\|\-previous' && echo || exit)
    (cd target && pwd && ls -Csh && echo)
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}/source.0"
  async: "{{ kohalxcs_ppmmtenv_timeout // 2 }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_postconversion
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled
    - kohalxcs_ppmmtenv_importchains != ''

## Post conversion: check whether we are finished
- name: data+ppmmt - Still in post-PP/MMT tasks for '{{ kohalxcs_ppmmtenv_importchains }}' ({{ kohalxcs_ppmmtenv_timeout|int // (2 * kohalxcs_ppmmtenv_checkdelay|d(60)) }} mins) ?
  async_status: jid={{ job_postconversion.ansible_job_id }}
  register: cmd_postconversion
  until: cmd_postconversion.finished
  retries: "{{ kohalxcs_ppmmtenv_timeout|int // (2 * kohalxcs_ppmmtenv_checkdelay|d(60)) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay | d(60) }}"
  when:
    - job_postconversion is defined
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled
    - kohalxcs_ppmmtenv_importchains != ''

## Make 'Staffaccounts' in addition to PP/MMT-Patrons
# - only if converting 'Patrons' & "kohlxcs_mmtenv_migrateme" has 'staffaccounts'
- name: data+ppmmt - Make Staff accounts for Koha (in addition to normal PatronsImportChain-conversion)
  environment:
    KOHALXC_TOOLDIR: "{{ kohalxcs_kohalxc_tooldir }}"
    KOHALXC_DATADIR: "{{ kohalxcs_dataenv_datadir }}"
  shell: |
    echo && echo "== ansible-kohalxc: Comment out below 'makeStaffAccouns.sh' (to ensure not overwriting 'testikoha' staffaccounts since 07.03.2017)"
    echo && ./makeStaffAccounts.sh Staffaccounts > /dev/null;
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_kohalxc_tooldir }}/ppmmtws/ConversionTools"
  register: cmd_staffaccounts
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled
    - ('patrons' in kohalxcs_ppmmtenv_importchains|lower)
    - ('staffaccounts' in kohalxcs_mmtenv_migrateme|lower)

## Build *.migrateme files: (skip Serial(s)Items for they have *.marc files)
# - Staffaccounts,Patrons,Biblios,Items,(Serials,)Holds,Checkouts,Fines
- name: data+ppmmt - Build '*.migrateme' from conv targets to be inserted to Koha
  environment:
    KOHALXC_TOOLDIR: "{{ kohalxcs_kohalxc_tooldir }}"
    KOHALXC_DATADIR: "{{ kohalxcs_dataenv_datadir }}"
  shell: |
    pwd && ls -1sh
    for d in {{kohalxcs_ppmmtenv_importchains|replace(',',' ')|d()}}; do
      ([[ -d $d ]] && cd $d && echo "== $d in: $(pwd)" && [[ "Serials" != "$d" ]] && [[ "SerialItems" != "$d" ]] && rm -f ${d,,}.migrateme && ( [[ "Biblios" != "$d" ]] && cat 01_${d,,}* > ${d,,}.migrateme || cat 03_${d,,}* > ${d,,}.migrateme ) && ls -Csh --format=horizontal | grep -v "total" && echo -n "== $d lines: " && wc -l ${d,,}.migrateme || echo; )
    done
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}/source.0/target"
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled
    - kohalxcs_ppmmtenv_importchains != ''


### ################################################
### HERE STARTS THE MIGRATION PHASE:
### requires Koha (kohaenv+mmtenv) to be installed
### ###############################################

## Push/copy KohaLXC/kohalxcs migration environment (mmtenv) customization scripts
- name: koha+mmt - Templatize some bulkImports and other post-migration scripts
  become: yes
  template: >
    src="files/kohaenv/{{ item.name }}.j2"
    dest="{{ kohalxcs_kohaenv_bindir }}/{{ item.dir }}/{{ item.name}}"
    owner="koha"
    group="{{ kohalxc_kohagrp_name }}"
    mode="u=rwx,g=rx,o=rx"
    backup="no"
  with_items:
    - { name: bulkPatronImport.pl, dir: migration_tools }
    - { name: OplibMatcher.pm, dir: migration_tools }
    - { name: bulkItemImport.pl, dir: migration_tools }
    - { name: bulkHoldsImport.pl, dir: migration_tools }
    - { name: generate_sortholds_sql.sh, dir: migration_tools }
    - { name: borrowers-force-messaging-defaults, dir: maintenance }
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - kohalxc_kohagrp_name is defined
    - ('patrons' in kohalxcs_ppmmtenv_importchains|lower) or ('patrons' in kohalxcs_mmtenv_migrateme|lower) or ('staffaccounts' in kohalxcs_mmtenv_migrateme|lower) or ('biblios' in kohalxcs_mmtenv_migrateme|lower) or ('items' in kohalxcs_mmtenv_migrateme|lower) or ('serials' in kohalxcs_mmtenv_migrateme|lower) or ('holds' in kohalxcs_mmtenv_migrateme|lower)

## Migrate
# TODO: SQL for preserving db tables data before migrating:
# USE kohadata.system_preferences: (system settings)
# - SELECT * FROM kohadata.system_preferences;
# USE kohadata.branches: (libraries/branches)
# - SELECT * FROM kohadata.branches;
# USE kohadata.letters: (notifications and messaging templates)
# - SELECT * FROM kohadata.letters;
#
# TODO: Empty/clean these database tables data before migrating:
# USE kohadata.issues: all
# - DELETE FROM issues WHERE issue_id <> 0;
# USE kohadata.borrowers: non-staff Patrons
# - DELETE FROM borrowers WHERE categorycode <> 'S' AND borrowernumber <> 1;
# USE kohadata.branchtransfers: all
# - TRUNCATE TABLE branchtransfers;
# - DELETE FROM branchtransfers WHERE  itemnumber <> 0;
# USE kohadata.branchrelations
# - TRUNCATE TABLE branchrelations;
# USE kohadata.message_queue
# - DELETE FROM kohadata.message_queue WHERE borrowernumber <> 0;

## Migrate (Patrons+Staffaccounts): start..
# - generates '~koha/log/borrowernumberConversionTable' (used in later migration stages)
- name: koha+mmt - Migrate (newly) converted Patrons and/or Staff accounts ({{ (kohalxcs_ppmmtenv_timeout|int) // 60 }} mins)
  become: yes
  shell: |
    [[ -d Patrons ]] && ls -1shl Patrons && echo "== ansible-kohalxc: Migrating 'Patrons' on $(date +%Y%m%d_%H%M).." && [[ -f Patrons/patrons.migrateme ]] && (
    head -9 Patrons/patrons.migrateme && su -l koha -c "bulkPatronImport.pl --file /home/{{ansible_user}}/{{kohalxc_organization}}/kohadata/source.0/target/Patrons/patrons.migrateme --deduplicate &> log/bulkPatronImport-$(date +%Y%m%d_%H%M).log";)
    [[ -d Staffaccounts ]] && ls -1shl Staffaccounts && [[ -f Staffaccounts/staffaccounts.migrateme ]] && (echo "== ansible-kohalxc: Not migrating 'Staffaccounts' (since 2017-03)";)
    #head -9 Staffaccounts/staffaccounts.migrateme && su -l koha -c "bulkPatronImport --file /home/{{ansible_user}}/{{kohalxc_organization}}/kohadata/source.0/target/Staffaccounts/staffaccounts.migrateme &> log/bulkPatronImport-staffaccounts_${date +%Y%m%d_%H%M).log";
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}/source.0/target"
  async: "{{ kohalxcs_ppmmtenv_timeout }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_migrate_patrons
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('patrons' in kohalxcs_mmtenv_migrateme|lower) or ('staffaccounts' in kohalxcs_mmtenv_migrateme|lower)
    - ('patrons' in kohalxcs_ppmmtenv_importchains|lower)

## Migrate (Patrons+Staffaccounts): .. are we finished yet?
- name: koha+mmt - Still migrating 'Patrons' ({{ (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins) ?
  become: yes
  async_status: jid={{ job_migrate_patrons.ansible_job_id }}
  register: cmd_migrate_patrons
  until: cmd_migrate_patrons.finished
  retries: "{{ (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay | d(60) }}"
  when:
    - job_migrate_patrons is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('patrons' in kohalxcs_mmtenv_migrateme|lower) or ('staffaccounts' in kohalxcs_mmtenv_migrateme|lower)
    - ('patrons' in kohalxcs_ppmmtenv_importchains|lower)

## Migrate (Patrons): post-migration fixes/tweaks to database data
# - TODO/FIX: this takes a long time (abt 1 hour), need to
#             have async task handling here, too (see above)..
#
- name: koha+mmt - Post-migration steps for 'Patrons'..
  become: yes
  environment:
    KOHALXC_TOOLDIR: "{{ kohalxcs_kohalxc_tooldir }}"
    KOHALXC_DATADIR: "{{ kohalxcs_dataenv_datadir }}"
  shell: |
    [[ -d Patrons ]] && echo "== ansible-kohalxc: Set messaging defaults per categorycode for borrowers w/ smsalertnumber on $(date +%Y%m%d_%H%M).." && (
    [[ -x {{kohalxcs_kohaenv_bindir}}/maintenance/borrowers-force-messaging-defaults ]] && 
    su -l koha -c "borrowers-force-messaging-defaults --doit &> ~koha/log/borrowers_force_messaging_defaults-$(date +%Y%m%d_%H%M);" )
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}/source.0/target"
  register: cmd_migrate_patronspost
  when:
    - cmd_migrate_patrons is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('patrons' in kohalxcs_mmtenv_migrateme|lower)
#- debug: var=cmd_migrate_patronspost

## Migrate (Biblios): bibliographic MarcXML data migration to Koha
# - generates '~koha/log/biblionumberConversionTable' (used in later migration stages)
- name: koha+mmt - Migrate 'Biblios' ({{ 5 * (kohalxcs_ppmmtenv_timeout|int) // 60 }} mins)
  become: yes
  shell: |
    [[ -d Biblios ]] && ls -1shl Biblios && echo "== ansible-kohalxc: Started migrating 'Biblios' on $(date +%Y%m%d_%H%M).." && [[ -f Biblios/biblios.migrateme ]] && (
    head -3 Biblios/biblios.migrateme && su -l koha -c "bulkmarcimport.pl -v -b -commit 1000 -m MARCXML --file={{ kohalxcs_dataenv_datadir }}/source.0/target/Biblios/biblios.migrateme -l log/biblionumberConversionTable &> log/bulkmarcimport_biblios-$(date +%Y%m%d_%H%M).log"; )
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}//source.0/target"
  async: "{{ 5 * (kohalxcs_ppmmtenv_timeout|int) }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_migratebiblios
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('biblios' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (Biblios): .. are we finished yet?
- name: koha+mmt - Still migrating 'Biblios' ({{ 5 * (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins) ?
  become: yes
  async_status: jid={{ job_migratebiblios.ansible_job_id }}
  register: cmd_migrate_biblios
  until: cmd_migrate_biblios.finished
  retries: "{{ 5 * (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ 2 * (kohalxcs_ppmmtenv_checkdelay|int) | d(120) }}"
  when:
    - job_migratebiblios is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('biblios' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (SerialsBiblio): serials bibliographic MarcXML data migration
# - insert MarcXML of Serials/{serialmothers.marc,serials.marc} to koha-db
# - generates (from above XML-sources)
#   - (for serialmothers): '~koha/log/serialmothersnumberConversionTable'
#   - (for serials): '~koha/log/serialsnumberConversionTable'
# - '~koha/log/serialnumbers_ConversionTable'
- name: koha+mmt - Migrate 'SerialsBiblio' ({{ (kohalxcs_ppmmtenv_timeout|int) // 60 }} mins)
  become: yes
  shell: |
    [[ -d Serials ]] && ls -1shl Serials && echo "== ansible-kohalxc: Started migrating 'Serials (mothers)' on $(date +%Y%m%d_%H%M).." && [[ -f Serials/serialmothers.marc ]] && (
    head -3 Serials/serialmothers.marc && su -l koha -c "bulkmarcimport.pl -v -b -commit 1000 -m MARCXML --file={{ kohalxcs_dataenv_datadir }}/source.0/target/Serials/serialmothers.marc -l log/serialmothersnumberConversionTable &> log/bulkmarcimport_serialmothers-$(date +%Y%m%d_%H%M).log"; )
    [[ -d Serials ]] && ls -1shl Serials && echo "== ansible-kohalxc: Started migrating 'Serials' on $(date +%Y%m%d_%H%M).." && [[ -f Serials/serials.marc ]] && (
    head -3 Serials/serials.marc && su -l koha -c "bulkmarcimport.pl -v -b -commit 1000 -m MARCXML --file={{ kohalxcs_dataenv_datadir }}/source.0/target/Serials/serials.marc -l log/serialsnumberConversionTable &> log/bulkmarcimport_serials-$(date +%Y%m%d_%H%M).log"; )
    ( [[ -f ~koha/log/serialmothersnumberConversionTable ]] && su -l koha -c "cp -p log/serialmothersnumberConversionTable log/serialnumbers_ConversionTable";
    [[ -f ~koha/log/serialsnumberConversionTable ]] && su -l koha -c "cat log/serialsnumberConversionTable >> log/serialnumbers_ConversionTable"; )
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}//source.0/target"
  async: "{{ kohalxcs_ppmmtenv_timeout }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_migrateserials
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('serialsbiblio' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (SerialsBiblio): .. are we finished yet?
- name: koha+mmt - Still migrating 'SerialsBiblio' ({{ (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins) ?
  become: yes
  async_status: jid={{ job_migrateserials.ansible_job_id }}
  register: cmd_migrate_serials
  until: cmd_migrate_serials.finished
  retries: "{{ (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay | d(60) }}"
  when:
    - job_migrateserials is defined
    - job_migrateserials.ansible_job_id is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('serialsbiblio' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (Items): bulk import library Items linked to 'Biblios' MarcXML
# - uses '~koha/log/biblionumberConversionTable'
# - generates '~koha/log/itemnumberConversionTable'
- name: koha+mmt - Migrate 'Items' ({{ 2 * (kohalxcs_ppmmtenv_timeout|int) // 60 }} mins)
  become: yes
  shell: |
    [[ -d Items ]] && ls -1shl Items && echo "== ansible-kohalxc: Started migrating 'Items' on $(date +%Y%m%d_%H%M).." && [[ -f Items/items.migrateme ]] && (
    [[ -f ~koha/log/biblionumberConversionTable ]] && head -3 Items/items.migrateme && su -l koha -c "bulkItemImport.pl -v --bnConversionTable log/biblionumberConversionTable --inConversionTable log/itemnumberConversionTable --file={{ kohalxcs_dataenv_datadir }}/source.0/target/Items/items.migrateme &> log/bulkItemImport_items-$(date +%Y%m%d_%H%M).log"; )
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}//source.0/target"
  async: "{{ 2 * (kohalxcs_ppmmtenv_timeout|int) }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_migrateitems
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('items' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (Items): .. are we finished yet?
- name: koha+mmt - Still migarating 'Items' ({{ 2 * (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins) ?
  become: yes
  async_status: jid={{ job_migrateitems.ansible_job_id }}
  register: cmd_migrate_items
  until: cmd_migrate_items.finished
  retries: "{{ 2 * (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay | d(60) }}"
  when:
    - job_migrateitems is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('items' in kohalxcs_mmtenv_migrateme|lower)

## Migrate SerialItem(s): linked to 'SerialsBiblio' MarcXML
# - uses '~koha/log/serialnumbers_ConversionTable' (and SerialItems/serials.item)
# - generates '~koha/log/serialitemnumberConversionTable'
- name: koha+mmt - Migrate converted Serialtem(s) ({{ (kohalxcs_ppmmtenv_timeout|int) // 60 }} mins)
  become: yes
  shell: |
    [[ -d SerialItems ]] && ls -1shl SerialItems && echo "== ansible-kohalxc: Started migrating 'SerialItem(s)' on $(date +%Y%m%d_%H%M).." && [[ -f SerialItems/serials.item ]] && (
    [[ -f ~koha/log/serialnumbers_ConversionTable ]] && head -3 SerialItems/serials.item && su -l koha -c "bulkItemImport.pl -v --bnConversionTable log/serialnumbers_ConversionTable --inConversionTable log/serialitemnumberConversionTable --file={{ kohalxcs_dataenv_datadir }}/source.0/target/SerialItems/serials.item &> log/bulkItemImport_serialitems-$(date +%Y%m%d_%H%M).log"; )
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}//source.0/target"
  async: "{{ kohalxcs_ppmmtenv_timeout }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_migrateserialitems
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('serialsitem' in kohalxcs_mmtenv_migrateme|lower)

## Migrate SerialItem(s): .. are we finished yet?
- name: koha+mmt - Still migrating 'SerialItem(s)' ({{ (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins) ?
  become: yes
  async_status: jid={{ job_migrateserialitems.ansible_job_id }}
  register: cmd_migrate_serialitems
  until: cmd_migrate_serialitems.finished
  retries: "{{ (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay | d(60) }}"
  when:
    - job_migrateserialitems is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('serialsitem' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (CheckOuts): loans data migration to Koha
# - requires patrons and all items (normal + serials) conversionTables for mapping
# - uses '~koha/log/itemnumberConversionTable + serialitemnumberComversionTable'
#        '~koha/log/serialitemnumberComversionTable'
#   => for (all itemnumbers) '~koha/log/itemnumbers_ConversionTable'
# - uses '~kohal/log/borrowernumberConversionTable '
#        '~kohal/log/itemnumbers_ConversionTable '
- name: koha+mmt - Migrate 'Checkouts' ({{ kohalxcs_ppmmtenv_timeout|int // 60 }} mins)
  become: yes
  shell: |
    [[ -d CheckOuts ]] && ls -1shl CheckOuts && echo "== ansible-kohalxc: Migrating 'Checkouts' on $(date +%Y%m%d_%H%M).." && [[ -f CheckOuts/checkouts.migrateme ]] && ( 
    [[ -f ~koha/log/itemnumberConversionTable && -f ~koha/log/serialitemnumberConversionTable ]] && su -l koha -c "cat log/itemnumberConversionTable log/serialitemnumberConversionTable > log/itemnumbers_ConversionTable";
    [[ -f ~koha/log/borrowernumberConversionTable ]] && head -3 CheckOuts/checkouts.migrateme && su -l koha -c "bulkCheckoutImport.pl -v --bnConversionTable log/borrowernumberConversionTable -inConversionTable log/itemnumbers_ConversionTable --file={{ kohalxcs_dataenv_datadir }}/source.0/target/CheckOuts/checkouts.migrateme &> log/bulkCheckoutImport-$(date +%Y%m%d_%H%M).log"; )
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}//source.0/target"
  async: "{{ kohalxcs_ppmmtenv_timeout }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_migratecheckouts
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('checkouts' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (CheckOuts): .. are we finished yet?
- name: koha+mmt - Still migrating 'Checkouts' ({{ kohalxcs_ppmmtenv_timeout|int // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins) ?
  become: yes
  async_status: jid={{ job_migratecheckouts.ansible_job_id }}
  register: cmd_migrate_checkouts
  until: cmd_migrate_checkouts.finished
  retries: "{{ kohalxcs_ppmmtenv_timeout // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay | d(60) }}"
  when:
    - job_migratecheckouts is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('checkouts' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (Holds): reservations/holds converted data migration to Koha
# - needs patrons, biblios & items (normal + serials) conversionTables for mapping
# - uses: '~koha/log/borrowernumberConversionTable'  = (Patrons)
# - uses: '~koha/log/biblionumberConversionTable'    (normal Biblios)
#         '~koha/log/serialnumbers_ConversionTable'  + (serials+mothers/Biblios)
#      => '~koha/log/biblionumbers_ConversionTable'  = (all Biblios)
# - uses: '~koha/log/itemnumberConversionTable       (normal Items)
#         '~koha/log/serialitemnumberConversionTable + (serials+mothers/Items)
#      => '~koha/log/itemnumbers_ConversionTable     = (all Items)
- name: koha+mmt - Migrate 'Holds' ({{ kohalxcs_ppmmtenv_timeout|int // 60 }} mins)
  become: yes
  shell: |
    [[ -d Holds ]] && ls -1shl Holds && echo "== ansible-kohalxc: Migrating 'Holds' on $(date +%Y%m%d_%H%M).." && [[ -f Holds/holds.migrateme ]] && (
    [[ -f ~koha/log/biblionumberConversionTable && -f ~koha/log/serialnumbers_ConversionTable ]] && su -l koha -c "cat log/biblionumberConversionTable log/serialnumbers_ConversionTable > log/biblionumbers_ConversionTable";
    [[ -f ~koha/log/itemnumberConversionTable && -f ~koha/log/serialitemnumberConversionTable ]] && su -l koha -c "cat log/itemnumberConversionTable log/serialitemnumberConversionTable > log/itemnumbers_ConversionTable";
    [[ -f ~koha/log/borrowernumberConversionTable ]] && head -3 Holds/holds.migrateme && su -l koha -c "bulkHoldsImport.pl -v -o log/borrowernumberConversionTable -b log/biblionumbers_ConversionTable -i log/itemnumbers_ConversionTable --file={{ kohalxcs_dataenv_datadir }}/source.0/target/Holds/holds.migrateme &> log/bulkHoldsImport-$(date +%Y%m%d_%H%M).log"; )
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}//source.0/target"
  async: "{{ kohalxcs_ppmmtenv_timeout }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_migrateholds
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('holds' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (Holds): .. are we finished yet?
- name: koha+mmt - Still migrating 'Holds' ({{ kohalxcs_ppmmtenv_timeout|int // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins) ?
  become: yes
  async_status: jid={{ job_migrateholds.ansible_job_id }}
  register: cmd_migrate_holds
  until: cmd_migrate_holds.finished
  retries: "{{ kohalxcs_ppmmtenv_timeout // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay | d(60) }}"
  when:
    - job_migrateholds is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('holds' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (Holds): post-migration fixes/tweaks to database data
- name: data+mdb+koha+mmt - Post-migration steps of 'Holds' (data/database)
  environment:
    KOHALXC_TOOLDIR: "{{ kohalxcs_kohalxc_tooldir }}"
    KOHALXC_DATADIR: "{{ kohalxcs_dataenv_datadir }}"
    KOHALXC_MDBENV_KOHAPASS: "{{ kohalxcs_mdbenv_kohapass }}"
    TARGET_SQLDIR: "{{ kohalxcs_dataenv_datadir }}/source.0/target/sql"
    TARGET_SQLSCRIPT: "sortholds.sql"
  shell: |
    [[ -d Holds ]] && ( [[ -d sql ]] || mkdir -p sql ) && ls -1sh Holds && (
    echo "== ansible-kohalxc: Generate SQL to sort 'Holds'..";
    {{ kohalxcs_kohaenv_bindir }}/migration_tools/generate_sortholds_sql.sh;
    [[ -f sql/sortholds.sql ]] && echo "== ansible-kohalxc: Run generated SQL in database to sort all Holds per biblio.." &&
    mysql -h {{ kohalxcs_mdbenv_dbhost }} -u {{ kohalxcs_mdbenv_kohauser }} --password={{ kohalxcs_mdbenv_kohapass }} {{ kohalxcs_mdbenv_kohadb }} < $TARGET_SQLDIR/$TARGET_SQLSCRIPT || echo "== ansible-kohalxc: Failed to run generated SQL against the database:'{{ kohalxcs_mdbenv_kohadb }}'"; )
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}/source.0/target"
  register: sql_reserves_sortholds
  when:
    - cmd_migrate_holds is defined
    - kohalxcs_mdbenv_enabled
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('holds' in kohalxcs_mmtenv_migrateme|lower)
- debug: var=sql_reservers_sortholds

## Migrate (Fines): borrower billing and fines data migration to Koha
# - needs patrons and items (normal + serials) conversionTables for mapping
# - uses: '~koha/log/borrowernumberConversionTable'  = (Patrons)
# - uses: '~koha/log/itemnumberConversionTable       (normal Items)
#         '~koha/log/serialitemnumberConversionTable + (serials+mothers/Items)
#      => '~koha/log/itemnumbers_ConversionTable     = (all Items)
- name: koha+mmt - Migrate 'Fines' ({{ kohalxcs_ppmmtenv_timeout // 60 }} mins)
  become: yes
  shell: |
    [[ -d Fines ]] && ls -1shl Fines && echo "== ansible-kohalxc: Migrating 'Fines' on $(date +%Y%m%d_%H%M).." && [[ -f Fines/fines.migrateme ]] && (
    [[ ! -f ~koha/log/itemnumbers_ConversionTable ]] && [[ -f ~koha/log/itemnumberConversionTable && -f ~koha/log/serialitemnumberConversionTable ]] && su -l koha -c "cat log/itemnumberConversionTable log/serialitemnumberConversionTable > log/itemnumbers_ConversionTable";
    [[ -f ~koha/log/borrowernumberConversionTable ]] && head -3 Fines/fines.migrateme && su -l koha -c "bulkFinesImport.pl -v -b log/borrowernumberConversionTable -i log/itemnumbers_ConversionTable --file={{ kohalxcs_dataenv_datadir }}/source.0/target/Fines/fines.migrateme &> log/bulkFinesImport-$(date +%Y%m%d_%H%M).log"; )
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}//source.0/target"
  async: "{{ kohalxcs_ppmmtenv_timeout }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_migratefines
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('fines' in kohalxcs_mmtenv_migrateme|lower)

## Migrate (Fines): .. are we finished yet?
- name: koha+mmt - Still migrating 'Fines' ({{ kohalxcs_ppmmtenv_timeout // kohalxcs_ppmmtenv_checkdelay | d(60) }} mins) ?
  become: yes
  async_status: jid={{ job_migratefines.ansible_job_id }}
  register: cmd_migrate_fines
  until: cmd_migrate_fines.finished
  retries: "{{ kohalxcs_ppmmtenv_timeout // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay | d(60) }}"
  when:
    - job_migratefines is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ('fines' in kohalxcs_mmtenv_migrateme|lower)

#- debug: var=kohalxcs_mdbenv_enabled,kohalxcs_kohaenv_enabled,kohalxcs_ppmmtenv_enabled,kohalxcs_mmtenv_enabled,kohalxcs_mmtenv_migrateme
## Zebra: rebuild index
- name: koha+mmt - Rebuild Zebra index for Koha ({{ kohalxcs_ppmmtenv_timeout|int // 60 }} mins)
  become: yes
  shell: |
    pwd && echo "== ansible-kohalxc: Rebuild (clean) and start Zebra index for Koha";
    service koha-zebra-daemon stop || echo "== ansible-kohalxc: Ensure no Zebra-daemon is running!"
    ln -s -f /usr/share/koha/bin/koha-zebra-ctl.sh /etc/init.d/koha-zebra-daemon
    update-rc.d koha-zebra-daemon defaults
    su -l koha -c "ps aux | grep 'koha-zebra-ctl' | grep -v grep && service koha-zebra-daemon restart || service koha-zebra-daemon start"
    chown koha -R /var/lib/koha
    su -l koha -c "/usr/share/koha/bin/migration_tools/rebuild_zebra.pl -a -b -r -v -x &> log/zebra_rebuild-$(date +%Y%m%d_%H%M).log"
    echo && echo "== ansible-kohalxc: Zebra index clean rebuild done."
    exit 0
  args:
    executable: /bin/bash
    chdir: "{{ kohalxcs_dataenv_datadir }}"
  async: "{{ kohalxcs_ppmmtenv_timeout }}"
  poll: "{{ kohalxcs_ppmmtenv_polling | d(0) }}"
  register: job_rebuildidx
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ( 'zebrasrv' in kohalxcs_mmtenv_migrateme|lower ) or ( ('biblios' in kohalxcs_ppmmtenv_importchains|lower) and ('biblios' in kohalxcs_mmtenv_migrateme|lower) ) or ( ('items' in kohalxcs_ppmmtenv_importchains|lower) and ('items' in kohalxcs_mmtenv_migrateme|lower) ) or ( ('serials' in kohalxcs_ppmmtenv_importchains|lower) and ('serials' in kohalxcs_mmtenv_migrateme|lower) )

#- debug: var=kohalxcs_ppmmtenv_timeout,kohalxcs_ppmmtenv_checkdelay,kohalxcs_ppmmtenv_checkfinished
## Zebra rebuild: check whether we are finished
- name: koha+mmt - Still building Biblios/Zebra index ({{ (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }} mins) ?
  become: yes
  async_status: jid={{ job_rebuildidx.ansible_job_id }}
  register: cmd_rebuildidx
  until: cmd_rebuildidx.finished
  retries: "{{ (kohalxcs_ppmmtenv_timeout|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_checkdelay|d(60) }}"
  when:
    - job_rebuildidx is defined
    - job_rebuildidx.ansible_job_id is defined
    - kohalxcs_kohaenv_enabled
    - kohalxcs_mmtenv_enabled
    - ( 'zebrasrv' in kohalxcs_mmtenv_migrateme|lower ) or ('biblios' in kohalxcs_mmtenv_migrateme|lower) or ('items' in kohalxcs_mmtenv_migrateme|lower) or ('serials' in kohalxcs_mmtenv_migrateme)

##
## Koha/webapp-setup after this point => TODO: move to kohaenv-setup.yaml
##

## Configure SMTP server for sending mail (postfix)
#TODO: if needed specify relay host/sasl config at the end of '/etc/postfix/main.cf':
#relayhost=smtp.gmail.com:587
#smtp_use_tls = yes
#smtp_sasl_auth_enable = yes
#smtp_sasl_security_options =
#smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
#smtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt in '/etc/postfix/sasl_passwd':
#[smtp.gmail.com]:587 user@gmail.com:passwd
# - generate the lookup-db: "sudo postmap /etc/postfix/sasl_passwd
- name: koha - Configure SMTP server for sending mail (postfix)
  become: yes
  lineinfile:
    dest: /etc/postfix/main.cf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
    backup: yes
  with_items:
    - { regexp: '^(myhostname =)(.*)', line: '\1 {{ kohalxcs_kohaenv_srvname }}' }
    - { regexp: '^(mydestination =)( .*{{ hostnode_kohaenv_srvdomain }},)(.*)', line: '\1 {{ kohalxcs_kohaenv_srvname }},\3' }
    - { regexp: '^(inet_interfaces =)(.*)', line: '\1 localhost' }
    #- { regexp: '^(#myorigin =)(.*)', line: '\1\2' }
    #- { regexp: '^(relayhost =)(.*)', line: '\1 [smtp.gmail.com]:587' }
  when:
    - kohalxcs_kohaenv_enabled

## Set the From/sender address fro SMTP/postfix
- name: koha - Set SMTP server From(sender) address in canonical map
  become: yes
  shell: |
    echo "@$(hostname) no-reply@{{ kohalxcs_kohaenv_srvname }}" > /etc/postfix/canonical;
    postmap /etc/postfix/canonical;
  when:
    - kohalxcs_kohaenv_enabled

## Configure SMTP/postifix to rewrite From/sender address to mails
- name: koha - Configure SMTP server/postfix From(sender) address
  become: yes
  blockinfile:
    dest: /etc/postfix/main.cf
    insertafter: EOF
    content: |
      sender_canonical_maps = hash:/etc/postfix/canonical
  when:
    - kohalxcs_kohaenv_enabled
  notify: Restart smtp

## Misc fixes/tweaks to Koha-install
# - Messaging/Labyrintti Driver fixes correcting scandic letter in SMS
- name: koha - Copy misc local tweaks/fixes to Koha-install
  become: yes
  template: >
    src="files/kohaenv/{{item.name}}.j2"
    dest="{{item.destroot|d('/usr/share/koha')}}/{{item.dir}}/{{item.name}}"
    mode="{{item.mode|d('u=rw,g=r,o=r')}}"
    owner="koha"
    group="{{ kohalxc_kohagrp_name }}"
    backup="yes"
  with_items:
    - { name: Hdiacritic.pm, dir: Koha,
        destroot: "{{ kohalxcs_kohaenv_perl5lib }}" }
    - { name: Driver.pm, dir: SMS/Send/Labyrintti,
        destroot: "{{ kohalxcs_kohaenv_perl5lib }}" }
    - { name: pendingreserves.pl, dir: circ, mode: "u=rwx,g=rx,o=rx",
        destroot: "{{ kohalxcs_kohaenv_staff_cgikoha }}" }
  when:
    - kohalxcs_kohaenv_enabled

## Use templatized koha-conf.xml to configure Koha
- name: koha - Generate Koha main configuration
  become: yes
  template: >
    src="files/kohaenv/koha-conf.xml.j2"
    dest="{{ kohalxcs_kohaenv_confdir }}/koha-conf.xml"
    mode="u=rw,g=r,o=r"
    owner="koha"
    group="{{ kohalxc_kohagrp_name }}"
    backup="yes"
  when:
    - kohalxcs_kohaenv_enabled
  notify: Stop webserver

- debug: var=hostnode_kohaenv_srvname,kohalxcs_kohaenv_enabled,kohalxcs_kohaenv_srvname,kohalxcs_kohaenv_https,kohalxcs_kohaenv_sslle,kohalxc_organization

## Generate self-signed SSL-certificate for Koha
- name: koha+ssl - Generate server.key and self-signed SSL-certificate for Koha/Apache2
  become: yes
  shell: mkdir -p /etc/apache2/ssl && openssl genrsa -des3 -passout pass:x -out /tmp/server.pass.key 2048 && openssl rsa -passin pass:x -in /tmp/server.pass.key -out /tmp/server.key && rm -f /tmp/server.pass.key && openssl req -new -subj "/C=FI/ST={{ hostnode_environment | d('local') }}/L={{ kohalxc_organization }}/O={{ kohalxcs_kohaenv_srvtitle | d('Koha Library') }}/OU={{ kohalxc_organization }} ({{ hostnode_environment | d('local') }})/CN={{ kohalxcs_kohaenv_srvname | d('localhost') }}" -key /tmp/server.key -out /tmp/server.csr && openssl x509 -req -sha256 -days 365 -in /tmp/server.csr -signkey /tmp/server.key -out /etc/apache2/ssl/server.crt && cp -vpf /tmp/server.key /etc/apache2/ssl/. && rm -f /tmp/server.*
  args:
    executable: /bin/bash
    chdir: /tmp
    creates: /etc/apache2/ssl/server.crt
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxc_organization is defined
    - kohalxcs_kohaenv_https and kohalxcs_kohaenv_srvname
    - (kohalxcs_kohaenv_sslle is not defined) or (not kohalxcs_kohaenv_sslle)

## Copy LetsEncrypt/Cerbot configuration (cli.ini) to Koha-config dir
- name: koha+ssl(le) - Generate LetsEncrypt/SSL configuration file (cli.ini)
  become: yes
  template: >
    src="files/kohaenv/koha-sslle.conf.j2"
    dest="{{ kohalxcs_kohaenv_confdir }}/koha-sslle.conf"
    mode="u=rw,g=r,o=r"
    owner="koha"
    group="{{ kohalxc_kohagrp_name }}"
    backup="no"
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_kohaenv_https
    - kohalxcs_kohaenv_sslle

## Install LetsEncrypt/certbot client and SSL-certificates for Koha
- name: koha+ssl(le) - Use LetsEncrypt/cerbot-auto to make SSL-certificates
  become: yes
  shell: |
    mkdir -p /opt/letsencrypt && git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt || ( [[ "$?" == "128" && -e /opt/letsencrypt/certbot-auto ]] && echo ) && [[ -f /etc/koha/koha-sslle.conf ]] && service apache2 stop &&
    /opt/letsencrypt/certbot-auto certonly -n --expand --force-renewal -c /etc/koha/koha-sslle.conf
    (cd /etc/apache2/ssl &&
    ln -sf /etc/letsencrypt/live/{{kohalxcs_kohaenv_srvname}}/privkey.pem sslle_key.pem
    ln -sf /etc/letsencrypt/live/{{kohalxcs_kohaenv_srvname}}/cert.pem sslle_cert.pem
    ln -sf /etc/letsencrypt/live/{{kohalxcs_kohaenv_srvname}}/chain.pem sslle_chain.pem
    ln -sf /etc/letsencrypt/live/{{kohalxcs_kohaenv_srvname}}/fullchain.pem sslle_fullchain.pem
    )
  args:
    chdir: /etc/koha
    executable: /bin/bash
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_kohaenv_https
    - kohalxcs_kohaenv_sslle

## Configure Koha(Apache2) OPAC and Intranet for https
# - TODO: need to separate self-signed and letsencrypt SSLs by Jinja2
- name: koha+ssl - Generate Koha/Apache2 https config (only if 'kohaenv_srvname' is set)
  become: yes
  template: >
    src="files/kohaenv/{{ kohalxc_organization|lower }}-https.conf.j2"
    dest="{{ kohalxcs_kohaenv_confdir }}/{{ kohalxc_organization|lower }}-https.conf"
    mode="u=rw,g=r,o=r"
    owner="koha"
    group="koha"
    backup="yes"
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxc_organization is defined
    - kohalxcs_kohaenv_https and kohalxcs_kohaenv_srvname

## Symlink https-configuration from Koha-config to Apache2 sites
- name: koha+ssl - Make available our SSL-site configuration in Koha/Apache2
  become: yes
  shell: ln -s -f {{ kohalxcs_kohaenv_confdir }}/{{ kohalxc_organization|lower }}-https.conf /etc/apache2/sites-available/koha-ssl.conf
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxc_organization is defined
    - kohalxcs_kohaenv_https and kohalxcs_kohaenv_srvname

## Enable SSL in Apache2 (disable http sites) an restart
- name: koha+ssl - Enable SSL (switch to https) restart Koha/Apache2
  become: yes
  shell: service apache2 stop && a2dissite koha.conf && a2enmod ssl && a2ensite koha-ssl.conf
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_kohaenv_https and kohalxcs_kohaenv_srvname
  notify: Restart webserver

## Cronjobs for cheduled tasks: user 'koha' w/ $KOHA_CRONJOB_TRIGGER wrapper:
# - "cronjobs/advance_notices.pl -m 7 -c"
# - "cronjobs/cart_to_shelf.pl --hours 12"
# - "cronjobs/holds/cancel_expired_holds -v"
# - "cronjobs/process_message_queue.pl -v"
# - "migration_tools/rebuild_zebra.pl -a -b -x -z -v"
# - "cronjobs/cleanup_database.pl --sessions --zebraqueue --mail --logs
- name: koha - Add cronjob(s) for Koha
  become: yes
  cron:
    user: koha
    name: "{{ item.name }}"
    job: "$KOHA_CRONJOB_TRIGGER {{ kohalxcs_kohaenv_bindir }}/{{ item.job }}"
    day: "{{ item.day | d('*') }}"
    hour: "{{ item.hour | d('*') }}"
    minute: "{{ item.minute | d('*') }}"
    state: present
  with_items:
    - { name: "advance_notices.pl", hour: "6", minute: "3",
        job: "cronjobs/advance_notices.pl -m 7 -c" }
    - { name: "cart_to_shelf", hour: "9,21", minute: "2",
        job: "cronjobs/cart_to_shelf.pl --hours 12" }
    - { name: "cancel_expired_holds", hour: "4", minute: "1",
        job: "cronjobs/holds/cancel_expired_holds.pl -v" }
    - { name: "process_message_queue",
        job: "cronjobs/process_message_queue.pl -v" }
    - { name: "rebuild_zebra",
        job: "migration_tools/rebuild_zebra.pl -a -b -x -z -v" }
    - { name: "cleanup_database", hour: "3",
        job: "cronjobs/cleanup_database.pl -v --sessions --sessdays 7 --zebraqueue 7 --mail 7 --logs 7" }
  when:
    - kohalxcs_kohaenv_enabled
    - ( 'cronsrv' in kohalxcs_mmtenv_migrateme|lower )

##
## Koha/webapp: SIP-service config => TODO: move to kohaenv-setup.yaml
##

## Retrieve Koha/LXC ip address
- name: koha+sip - The IP of LXC/Koha
  shell: /bin/hostname -I
  register: cmd_hostip
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_kohaenv_sipenabled

#- debug: var=cmd_hostip,cmd_hostip.stdout
## Set Koha/LXC ip-address as SIP-server ip
- name: koha+sip - Set SIP-server ip-address
  set_fact:
    kohalxcs_kohaenv_sipserver="{{ cmd_hostip.stdout|replace(' ','')|d('127.0.0.1') }}"
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_kohaenv_sipenabled
    - cmd_hostip|changed and cmd_hostip.stdout != ""
    - ( 'sipsrv' in kohalxcs_mmtenv_migrateme|lower )

## Copy templetized SIP-service configs to Koha/LXC
# - TODO: how to handle multiple SIP-servers start/stop/restart?
- name: koha+sip - Copy SIP-configuration(s) and rsyslog to Koha-LXCs
  become: yes
  template: >
    src="files/kohaenv/{{ item.name }}.j2"
    dest="{{ item.dir }}/{{ item.name }}"
    mode="{{ item.mode | d('u=rw,g=r,o=r') }}"
    owner="{{ item.owner | d('koha') }}"
    group="{{ item.group | d('koha') }}"
    backup="no"
  with_items:
    - { name: 50-default.conf, dir: "/etc/rsyslog.d", owner: root, group: root }
    - { name: rsyslog-koha.conf, dir: "/etc/rsyslog.d", owner: root, group: root }
    - { name: "SIPconfig-{{kohalxc_organization|lower}}_1sip.xml",
        dir: "{{ kohalxcs_kohaenv_sipconfdir }}",
        sip: "1sip", minsrv: 8, port: 8021 }
    - { name: "SIPconfig-{{kohalxc_organization|lower}}_2sip.xml",
        dir: "{{ kohalxcs_kohaenv_sipconfdir }}",
        sip: "2sip", minsrv: 5, port: 8022 }
    - { name: "SIPconfig-{{kohalxc_organization|lower}}_3sip.xml",
        dir: "{{ kohalxcs_kohaenv_sipconfdir }}",
        sip: "3sip", minsrv: 10, port: 8023 }
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_kohaenv_sipenabled
    -  ( 'sipsrv' in kohalxcs_mmtenv_migrateme|lower )

#- debug: var=kohalxcs_kohaenv_bindir,kohalxcs_kohaenv_sipconfdir,kohalxcs_kohaenv_sipname
## SIP-service script install/setup and starting of SIP-servers
- name: koha+sip - Setup and (re)start Koha/SIP-server(s)
  shell: |
    pwd && whoami &&
    echo "== ansible-kohalxc: Setup and (re)start SIP-service(s)..";
    {{kohalxcs_kohaenv_bindir}}/sip_shutdown.sh {{item|d('sip')}} && ps aux | grep SIPServer | grep -v grep || echo "== ansible-kohalxc: Ensure SIP '{{item}}' is stopped.";
    [[ -f {{kohalxcs_kohaenv_sipconfdir}}/SIPconfig-{{kohalxc_organization|lower}}_{{item|d('sip')}}.xml ]] && nohup {{kohalxcs_kohaenv_bindir}}/sip_run.sh {{kohalxcs_kohaenv_sipconfdir}}/SIPconfig-{{kohalxc_organization|lower}}_{{item|d('sip')}}.xml ~/log/{{kohalxc_organization|lower}}_{{item|d('sip')}}-out.log ~/log/{{kohalxc_organization|lower}}_{{item|d('sip')}}-err.log;
    echo && ls -la ~/log && ps aux | grep "SIPServer.*{{item}}"
    echo && ps aux | grep "SIPServer.*{{item}}" | grep -v grep &&
    echo "== ansible-kohalxc: Koha/SIP '{{item}}' setup/running." ||
    echo "== ansible-kohalxc: Koha/SIP-'{{item}}' failed to start/run."
  args:
    executable: /bin/bash
  with_items:
    - 1sip
    - 2sip
    - 3sip
  register: job_service_sipstart
  when:
    - kohalxcs_kohaenv_enabled
    - kohalxcs_kohaenv_sipenabled
    -  ( 'sipsrv' in kohalxcs_mmtenv_migrateme|lower )

#ln -s -f /usr/share/koha/bin/koha-zebra-ctl.sh /etc/init.d/koha-zebra-daemon
#update-rc.d koha-zebra-daemon defaults
#su -l koha -c "ps aux | grep 'koha-zebra-ctl' | grep -v grep && service koha-zebra-daemon restart || service koha-zebra-daemon start"
#chown koha -R /var/lib/koha
#su -l koha -c "/usr/share/koha/bin/migration_tools/rebuild_zebra.pl -a -b -r -v -x &> log/zebra_rebuild-$(date +%Y%m%d_%H%M).log"

## !! For debug/dev FAIL here on purpose..!! ##
#- fail:
