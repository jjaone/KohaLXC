---
# File: roles/kohalxcs/tasks/kohalxcs-setup.yaml
# #############################################################################
# Code is part of the KohaLXC/kohatools Ansible/Bash tooling environment
# for Koha/ILS-development, deployment & database conversion/migration tasks.
# Author: Jukka Aaltonen, Koha-Lappi, Rovaniemi City Library, Lapland/Finland.
# License: GNU General Public License version 3.
# 
# Description: setup tasks of Koha-related LXCs for dev/mdb/web/data envs
# - setup Koha-related LXCs environments in playbook inventories
# - ensure availability of all required distro packages and Perl-modules
# - 
# ##############################################################################

## Ensure env.* pckgs are installed
# [KohaLXC]: kohalxcs: Packages for LXCs
- name: devenv/dataenv - Ensure all development and data environemnt packages are installed
  become: yes
  apt: >
    name="{{ item }}"
    update_cache="yes"
    state="present"
    autoremove="yes"
  with_flattened:
    - kohalxcs_devenv_pckgs
    - kohalxcs_dataenv_pckgs
  when:
    - kohalxcs_devenv_enabled
    - kohalxcs_dataenv_enabled

- debug: var=hostnode_environment,kohalxc_install,kohalxc_organization
## Setup remote developer environment shell profile (devenv/bash-profile)
# - [TODO]: KOHALXC_ vars have wrong paths (mounts are not in Works but in HOME)
- name: devenv - Setup system-wide Bash profile for KohaLXC-development
  become: yes
  template: >
    src="files/devenv/bash_profile.sh.j2"
    dest="/etc/profile.d/kohalxc-devenv.sh"
    backup="no"
  when:
    - kohalxcs_devenv_enabled
    - hostnode_environment != "localdev"

- debug: var=kohalxcs_kohalxc_tooldir
## Push/copy 'run_conversion' script to ConversionTools
- name: dataenv - Push containerized conversion main script to ConversionTools
  #become: yes
  template: >
    src="files/dataenv/run_conversion-perl_import_pl.sh.j2"
    dest="{{ kohalxcs_kohalxc_tooldir }}/ppmmtws/ConversionTools/run_conversion.sh"
    mode="u+rwx,g+rx,o-rwx"
    backup="no"
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled

## Ensure 'run_conversion' script is symlinked to container $HOME/bin
- name: dataenv - Symlink conversion main script in container HOME/bin
  file: >
    src="{{ kohalxcs_kohalxc_tooldir }}/ppmmtws/ConversionTools/run_conversion.sh"
    dest="{{ '/home/'~ansible_user~'/bin/run_conversion' }}"
    state="link"
    force="yes"
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled

- debug: var=kohalxc_tooldir,kohalxc_datadir
## Run conversion: main script
# - script might run very long time, poll every half a minute, timeout in seconds
- name: dataenv/ppmmtenv - Start running the PP/MMT-conversion script in 'lxc_config' for {{ kohalxcs_ppmmtenv_runconv_importchains | d('all') }}} (max {{ (kohalxcs_ppmmtenv_runconv_timeout | d(3600) | int) // 3600 }} hours)
  environment:
    KOHALXC_TOOLDIR: "{{ '/home/'~ansible_user~'/KohaLXC/kohatools' }}"
    KOHALXC_DATADIR: "{{ '/home/'~ansible_user~'/KohaLappi/kohadata' }}"
  shell: |
    ls -l ~/bin/run_conversion;
    echo && echo "== START OF PP/MMT CONVERSION.." && echo;
    $HOME/bin/run_conversion lxc_config.xml {{ kohalxcs_ppmmtenv_runconv_importchains | d() }} > /dev/null;
    head -35 $KOHALXC_TOOLDIR/ppmmtws/PerlMMT/logs/import_all.log;
    echo && echo "== ..CONVERTING.." && echo;
  async: "{{ kohalxcs_ppmmtenv_runconv_timeout | d(3600) }}"
  poll: "{{ kohalxcs_ppmmtenv_runconv_polling | d(0) }}"
  register: job_runconversion
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled

## Run conversion: check whether we are finished
- name: dataenv/ppmmtenv - Check whether PP/MMT-conversion run has finisihed..
  async_status: jid={{ job_runconversion.ansible_job_id }}
  register: cmd_runconversion_result
  until: cmd_runconversion_result.finished
  retries: "{{ kohalxcs_ppmmtenv_runconv_checkfinished | d(60) }}"
  delay: "{{ kohalxcs_ppmmtenv_runconv_checkdelay | d(5) }}"
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled

- debug: var=cmd_runconversion_result
## Run conversion: finish the run, split log per ImportChain(s)
- name: dataenv/ppmmtenv - Finish PP/MMT-run (split/show log by import-chains)
  environment:
    KOHALXC_TOOLDIR: "{{ '/home/'~ansible_user~'/KohaLXC/kohatools' }}"
    KOHALXC_DATADIR: "{{ '/home/'~ansible_user~'/KohaLappi/kohadata' }}"
  shell: |
    tail -30 $KOHALXC_TOOLDIR/ppmmtws/PerlMMT/logs/import_all.log
    echo && echo "== END OF PP/MMT CONVERSION." && echo
    (cd $KOHALXC_DATADIR/source.0/logs && pwd && ls -l && echo)
    (cd $KOHALXC_DATADIR/source.0/target && pwd && ls -Csh && echo)
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled

## Run conversion: build '{Patrons,Biblios,Items,Holds,Checkouts,Fines}.migrateme' files
- name: dataenv/ppmmtenv - Build '*.migrateme' files to be inserted to Koha
  environment:
    KOHALXC_TOOLDIR: "{{ '/home/'~ansible_user~'/KohaLXC/kohatools' }}"
    KOHALXC_DATADIR: "{{ '/home/'~ansible_user~'/KohaLappi/kohadata' }}"
  shell: |
    for d in Patrons Biblios Items Holds Checkouts Fines
    do
    (cd $KOHALXC_DATADIR/source.0/target/$d && pwd && cat 01_${d,,}* > ${d,,}.migrateme && ls -Csh --format=horizontal && echo && echo -n "== Lines,words,chars: " && wc ${d,,}.migrateme) || echo;
    done
  args:
    executable: /bin/bash
  #ignore_errors: yes
  when:
    - kohalxcs_dataenv_enabled
    - kohalxcs_ppmmtenv_enabled


## !! For debug/dev FAIL here on purpose..!! ##
#- fail:
