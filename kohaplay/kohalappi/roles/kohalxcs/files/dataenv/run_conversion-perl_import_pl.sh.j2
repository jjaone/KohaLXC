#!/bin/bash

# KohaLXC/kohatools (data+mmtenv): PP/MMT-configuration
# file: $KOHALXC_TOOLDIR/ppmmtws/ConversionTools/run_conversion-perl_import.pl.sh
{{ ansible_managed | comment }}

## KOHALXC environment
# - Check that KOHALXC_TOOLDIR is set and directory exists..
[[ -z "$KOHALXC_TOOLDIR" ]] || [[ ! -e "$KOHALXC_TOOLDIR" ]] &&
    echo "== No KOHALXC_TOOLDIR set or dir does not exist ..exiting" && exit 1
# - Check that KOHALXC_DATADIR is set and directory exists..
[[ -z "$KOHALXC_DATADIR" ]] || [[ ! -e "$KOHALXC_DATADIR" ]] &&
    echo "== No KOHALXC_DATADIR set or dir does not exist ..exiting" && exit 1

## Directories: 
PPMMT_DIR="${KOHALXC_TOOLDIR}/ppmmtws"
#PPMMT_DIR="$HOME/kohatools/ppmmtws"
#: -'source.0' to use "fixed sources" as data
DATA_DIR="${KOHALXC_DATADIR}/source.0"
#DATA_DIR="$HOME/kohadata/source"
LOGS_DIR="$DATA_DIR/logs"

## PP/MMT-configuration:
DEFAULT_CONFIG="default_config.xml"
HOST_CONFIG="host_config.xml"
LXC_CONFIG="lxc_config.xml"
# Which config.xml to use: LXC_CONFIG (default)
CONFIG_XML="$LXC_CONFIG"
[[ -n "$1" ]] && CONFIG_XML=$1

## Show configuration: verbose
echo "PPMMT_DIR=$PPMMT_DIR"
echo "DATA_DIR=$DATA_DIR"
echo "LOGS_DIR=$LOGS_DIR"
echo "CONFIG_XML=$CONFIG_XML"

# Check that PP/MMT main config exists..
[[ ! -e "${PPMMT_DIR}/${CONFIG_XML}" ]] && 
	echo "== No config file found..exiting" && exit 1

## Do the stuff ##

STARTSTAMP=`date +%Y%m%d_%H%M`
echo && echo "== conversion_run-perl_import.pl.sh: $STARTSTAMP"

## Make required directories (and empty run log directory)
cd $PPMMT_DIR/PerlMMT && mkdir -vp logs && pwd && rm -f -r logs/*
#cd $PPMMT_DIR/PerlMMT && mkdir -vp logs && pwd && rm -f logs/*.log && mkdir -v logs/conversion-$STARTSTAMP
mkdir -vp $LOGS_DIR/conversion-$STARTSTAMP && pwd && ls -la $LOGS_DIR

## Run the PP/MMT
perl import.pl ../$CONFIG_XML 2>&1 | tee logs/import_all.log
#perl import.pl ../$CONFIG_XML |& tee logs/conversion-$STARTSTAMP/import_all.log

## Save logs
echo && cp -vpr logs/* $LOGS_DIR/conversion-$STARTSTAMP/.

## Show what we got
echo && ls -l $LOGS_DIR/conversion-$STARTSTAMP && head -15 $LOGS_DIR/conversion-$STARTSTAMP/import_all.log

## Clean exit
ENDSTAMP=`date +%Y%m%d_%H%M`
echo && echo "== conversion_run-perl_import.pl.sh: done on $ENDSTAMP"

exit 0
