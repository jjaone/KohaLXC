---
# File: roles/kohalxcs/defaults/all/main.yml
# #############################################################################
# Code is part of the KohaLXC/kohatools Ansible/Bash tooling environment
# for Koha/ILS-development, deployment & database conversion/migration tasks.
# Author: Jukka Aaltonen, Koha-Lappi, Rovaniemi City Library, Lapland/Finland.
# License: GNU General Public License version 3.
#
# [TODO]: Description: define defaults for all variables used in this role
# - General, KohalXC-tooling, Server-updates, Security, LVM, ZFS, LXCs
# - vars should be named like 'hostnode_var1' etc..
# - vars used in templates for config files should be at target OS defaults
#
# See also:
# - roles/hostnode/defaults/main.yaml (defaults for hosts)
# - roles/hostnode/vars/main.yaml ('constantized' vars for hosts)
# - <inventory>/group_vars/{all/}{main,vault}.yaml (inventory vars..)
# - <playbooks>/group_vars/{all,hostnode}/{main,vault}.yaml (top-level)
# #############################################################################

## Just to test/debug the inheritance in ansible playbooks..
kohalxcs_testvar: roles_kohalxcs_defaults_main.yaml

## #########################
## General: facts & handlers
## #########################
# Facts gathering: False/True
#gather_facts: False
# Force all handlers always (also in case play fails etc):
#force_handlers: false
# Local/management user home directory
#local_home: "{{ lookup('env', 'HOME') }}"

## ###########################
## Server/LXC: KohaLXC tooling
## ###########################
# - defaults in 'roles/common/defaults/main.yaml'
# - override these in inventory/group+host_vars
## KohaLXC: install dir
kohalxc_install: "/home/{{ ansible_user }}"
## KohaLXC: works
kohalxcs_kohalxc_works: "{{ kohalxc_install }}"
## KohaLXC: rootdir
kohalxcs_kohalxc_rootdir: "{{ kohalxcs_kohalxc_works }}/KohaLXC"
## KohaLXC: tooldir
kohalxcs_kohalxc_tooldir: "{{ kohalxcs_kohalxc_rootdir }}/kohatools"

## ############################
## KohaLXC/development (devenv)
## ############################
## KohaLXC/devenv: role default
kohalxcs_devenv_enabled: true
# Packages needed for dataenv setup/config/tools
kohalxcs_devenv_pckgs:
  - wget
  - joe
  - nano
  - git
  - python2.7-minimal
#  - python-mysqldb
#hostnode_devenv_confdir: "{{ hostnode_kohalxc_tooldir }}/conf.d/env.dev"

## ############################
## KohaLXC/server/host (srvenv)
## ############################
## KohaLXC/srvenv: role default
#hostnode_srvenv_enabled: true
# Packages needed for srvenv setup/config/tools
#hostnode_srvenv_pckgs:
#  - sshfs
#  - iptables
#  - iptables-persistent
#  - bridge-utils
#  - mailutils
#hostnode_srvenv_confdir: "{{ hostnode_kohalxc_tooldir }}/conf.d/env.srv"

## ##########################
## KohaLXC/datasets (dataenv)
## ##########################
## KohaLXC/dataenv: role default
kohalxcs_dataenv_enabled: false
# Packages needed for dataenv setup/config/tools
kohalxcs_dataenv_pckgs:
  - libswitch-perl
  - libtext-autoformat-perl
  - libxml-simple-perl
  - libcarp-always-perl
  - libmodern-perl-perl
  - libdatetime-perl
  - ghostscript
  - groff
  - apg
  - rng-tools
# KohaLXC/dataenv: configuration
kohalxcs_dataenv_confdir: "{{ kohalxcs_kohalxc_tooldir }}/conf.d/env.data"
# KohaLXC/dataenv: datadir
kohalxcs_dataenv_datadir: "{{ kohalxcs_kohalxc_works }}/{{ kohalxc_organization }}/kohadata"
# KohaLXC/dataenv: datasets name(s) for MMT-migration:
#hostnode_dataenv_datasets: "{{ kohalxc_datasets }}"

## #########################################################################
## KohaLXC/MMT(PP/Origo): mmtenv=ppmmtenv+origommtenv conversions/migrations
## #########################################################################
# KohaLXC/(pp/o)mmtenv: support creation of data+MMT-aware LXCs

## KohaLXC/ppmmtenv: PP/MMT-tool environment
kohalxcs_ppmmtenv_enabled: false
## KohaLXC/ppmmtenv: PP/MMT-conversion script run settings
# - which import chains should we run (empty means none)
kohalxcs_ppmmtenv_importchains: "{{ hostnode_ppmmtenv_importchains | d('') }}"
# - run timeout (in seconds): 3 hrs = 3 * 3600 s = 10800 s
kohalxcs_ppmmtenv_timeout: 10800
# - run poll frequency (in seconds): 0 or none = asynchronous run
kohalxcs_ppmmtenv_polling: 0
# - the delay between checks of whether conversion has finished (default: 60 s = 1 min)
kohalxcs_ppmmtenv_checkdelay: 60
# - check this many times/minutes conversion run status (default: 180 times/mins):
# - 180 * 60 s = 10800 s (= 3 hours)
kohalxcs_ppmmtenv_checkfinished: "{{ (kohalxcs_ppmmtenv_timeout|d(10800)|int) // kohalxcs_ppmmtenv_checkdelay|d(60) }}"

## KohaLXC/ommtenv: Origo/MMT-tool environment
kohalxcs_ommtenv_enabled: false

# Koha/mmtenv: migration phase of the comversion
kohalxcs_mmtenv_enabled: false
# Koha/mmtenv: migration (list datas that should be migrated)
kohalxcs_mmtenv_migrateme: ''
# Koha/mmtenv: Zebra-index rebuilder
kohalxcs_mmtenv_zebrarebuild: /usr/share/koha/bin/migration_tools/rebuild_zebra.pl
kohalxcs_mmtenv_zebrarebuild_opts: -b -r -v -x
#kohalxcs_mmtenv_zebrarebuild_opts: -b -r -v -x --offset 100000 --length 50000

## ######################################
## KohaLXC/mdbenv: Mysql/MariaDB-database
## #####################################
kohalxcs_mdbenv_enabled: false
# Packages needed for setup/config/tools
kohalxcs_mdbenv_pckgs:
  - python-mysqldb
# Koha/database host
kohalxcs_mdbenv_dbhost: "{{ kohalxc_mdbenv_dbhost | d('localhost') }}"
# Koha/database port
kohalxcs_mdbenv_dbport: "{{ kohalxc_mdbenv_dbport | d(3306) }}"
# Koha/database user
kohalxcs_mdbenv_kohauser: "{{ kohalxc_mdbenv_kohauser | d('koha') }}"
# Koha/database user pass
kohalxcs_mdbenv_kohapass: "{{ kohalxc_mdbenv_kohapass }}"
# Koha/database name
kohalxcs_mdbenv_kohadb: "{{ kohalxc_mdbenv_kohadb | d('kohadata') }}"

## ############################
## KohaLXC/kohaenv: Koha/webapp
## ############################
kohalxcs_kohaenv_enabled: false
# Packages needed for setup/config/tools
kohalxcs_kohaenv_pckgs:
  - gettext
  - ca-certificates
  - openssl
  - apache2
  - dnsutils
  - mailutils
  - postfix
  - libsasl2-modules

# Koha/webapp: koha-sources APT list path/file
kohalxcs_kohaenv_aptlist: /etc/apt/sources.list.d/koha.list
# Koha/webapp: koha-community packages repository and release
kohalxcs_kohaenv_repo: "http://debian.koha-community.org/koha"
kohalxcs_kohaenv_release: "oldstable main"
#kohalxcs_kohaenv_release: "stable main"
#kohalxcs_kohaenv_release: "unstable main"
# Koha/webapp: Git sourcecode for (KohaSuomi-based) dev/standard installs
kohalxcs_kohaenv_gitrepo: "https://github.com/KohaSuomi/kohasuomi.git"
# Koha/weball: Koha/Git (clone/fork) working directory
kohalxcs_kohaenv_kohaclone: "/home/{{ ansible_user }}/kohaclone"

# Koha/webapp: SIP-service enabled
kohalxcs_kohaenv_sipenabled: true
# - SIP-server config dir:
kohalxcs_kohaenv_sipconfdir: "{{ kohalxcs_kohaenv_confdir }}/SIPconfig"
# - SIP-server instance: kohalappi_1sip
kohalxcs_kohaenv_sipname: kohalappi_sip
# - SIP-server params: min_servers (3), (# of SIP devices in SIPsrv)
kohalxcs_kohaenv_sipminservers: 3
# - SIP-server ip retrieved dynamically in the play, e.g $(hostname -I)
#kohalxcs_kohaenv_sipserver: (127.0.0.1)
# - SIP-server port: (8020-8023, note: 6000-6003 d not work in Lappi)
kohalxcs_kohaenv_sipport: 8020
# - SIP-server system log filename, overriden in SIPconfig-<xyz>.xml
kohalxcs_kohaenv_siplogfile: "{{ kohalxc_organization|lower }}_sip.log"
# - SIP-server transport: (RAW)/Telnet
kohalxcs_kohaenv_siptrans: "RAW"
# - SIP-server protocol: (SIP/2.00),SIP/2.10
kohalxcs_kohaenv_sipproto: "SIP/2.10"

# Koha/webapp: server name (DNS)
kohalxcs_kohaenv_srvname: "{{ hostnode_kohaenv_srvname }}"
# Koha/webapp: server title/org
kohalxcs_kohaenv_srvtitle: "Lapin kirjasto"
# Koha/webapp: server admin (email)
kohalxcs_kohaenv_srvadmin: "webmaster@{{ kohalxcs_kohaenv_srvname | d('localhost') }}"
# Koha/webapp: Koha configuration (dir/file)
kohalxcs_kohaenv_confdir: /etc/koha
#kohalxcs_kohaenv_kohaconf: /etc/koha/koha-conf.xml
# Koha/webapp: Koha PERL5LIB location
kohalxcs_kohaenv_perl5lib: /usr/share/koha/lib
# Koha/webapp: Koha bin/scripts location
kohalxcs_kohaenv_bindir: /usr/share/koha/bin
# Koha/webapp: log directory
kohalxcs_kohaenv_logdir: /var/log/koha
# Koha/webapp: Support for https?
kohalxcs_kohaenv_https: true
# Koha/webapp: Support for Self-signed SSL-certificates? (either this or..)
kohalxcs_kohaenv_sslss: false
# Koha/webapp: Support for LetsEncrypt-verified SSL-certificates? (..this)
kohalxcs_kohaenv_sslle: true

# Koha/webapp (OPAC): vhost port
kohalxcs_kohaenv_opac_vhostport: 80
#kohalxcs_kohaenv_opac_vhostport: 443
# Koha/webapp (OPAC): server admin (email)
kohalxcs_kohaenv_opac_srvadmin: "{{ kohalxcs_kohaenv_srvadmin }}"
# Koha/webapp (OPAC): document root
kohalxcs_kohaenv_opac_docroot: /usr/share/koha/opac/htdocs
# Koha/webapp (OPAC): server name
kohalxcs_kohaenv_opac_srvname: "{{ kohalxcs_kohaenv_srvname | d('localhost') }}"
kohalxcs_kohaenv_opac_cgikoha: /usr/share/koha/opac/cgi-bin/opac
kohalxcs_kohaenv_opac_cgiindex: /usr/share/koha/opac/cgi-bin/opac/opac-main.pl
kohalxcs_kohaenv_opac_cgisearch: /usr/share/koha/opac/cgi-bin/opac/opac-search.pl
kohalxcs_kohaenv_opac_errorlog: "{{ kohalxcs_kohaenv_logdir }}/koha-opac-error_log"
kohalxcs_kohaenv_opac_accesslog: "{{ kohalxcs_kohaenv_logdir }}/koha-opac-access_log"

# Koha/webapp (Staff): vhost port
kohalxcs_kohaenv_staff_vhostport: 443
#kohalxcs_kohaenv_staff_vhostport: 8080
# Koha/webapp (Staff): server admin (email)
kohalxcs_kohaenv_staff_srvadmin: "{{ kohalxcs_kohaenv_srvadmin }}"
# Koha/webapp (Staff): document root
kohalxcs_kohaenv_staff_docroot: /usr/share/koha/intranet/htdocs
# Koha/webapp (Staff): server name
kohalxcs_kohaenv_staff_srvname: "{{ kohalxcs_kohaenv_srvname | d('localhost') }}"
kohalxcs_kohaenv_staff_cgikoha: /usr/share/koha/intranet/cgi-bin
# Koha/webapp: Reverse Proxy paths for KOHA API DAEMON
kohalxcs_kohaenv_staff_api: "{{ kohalxcs_kohaenv_staff_cgikoha }}/api/v1"
kohalxcs_kohaenv_staff_cgiindex: /usr/share/koha/intranet/cgi-bin/mainpage.pl
kohalxcs_kohaenv_staff_cgisearch: /usr/share/koha/intranet/cgi-bin/search.pl
kohalxcs_kohaenv_staff_plugins: /var/lib/koha/plugins
kohalxcs_kohaenv_staff_errorlog: "{{ kohalxcs_kohaenv_logdir }}/koha-error_log"
kohalxcs_kohaenv_staff_accesslog: "{{ kohalxcs_kohaenv_logdir }}/koha-access_log"

## Koha/webapp: messaging (message_queue: emails and SMS etc,)
# - SMS/GW-command path:
kohalxcs_kohaenv_messaging_gwcmdurl: https://gw.labyrintti.com:28443/sendsms
# - user/pass (vaulted)
#kohalxcs_kohaenv_messaging_smsuser:
#kohalxcs_kohaenv_messaging_smspass:
kohalxcs_kohaenv_messaging_smsreporturl: "https://{{ kohalxcs_kohaenv_srvname}}/api/v1/{messagenumber}/report/{{ kohalxcs_kohaenv_messaging_smsprovider | d('smsprovider') }}"
kohalxcs_kohaenv_messaging_smssource: "{{ kohalxcs_organization | d(kohalxc_organization) }}"

## ###########################
## Server: updates/reboots/nic
## ###########################
# Rebootable server
kohalxcs_reboot_enabled: false
# Upgradable server
kohalxcs_upgrade_enabled: false
# Pattern to ignore pckgs from upgrades
kohalxcs_upgrade_pckgsignore:
# Network-card interface
kohalxcs_network_interface: eth0

## #########################
## Server security/hardening 
## #########################
## Secure/hardening of the server
kohalxcs_secure_enabled: false
## 00 - packages needed for security/hardening
kohalxcs_secure_pckgs:
  - openssh-client
  - openssh-server
## 17 - Analyze system logs
# Enable reports always when the script is run
kohalxcs_secure_logwatch_always: false
# Logwatch packges
kohalxcs_secure_logwatch_pckgs:
  - logwatch
  - libdate-manip-perl
  - libsys-cpu-perl
  - libsys-meminfo-perl
# Output type: [stdout], mail
kohalxcs_secure_logwatch_output: mail
# Format of the report: [text], html
kohalxcs_secure_logwatch_format: html
# Range of the report: All, Today, [Yesterday]
kohalxcs_secure_logwatch_range: All
# Level of the report: [Low (0)], Med (5), High (10)
kohalxcs_secure_logwatch_detail: High
# Period to report (default: All)
kohalxcs_secure_logwatch_reportperiod: 30
# Where to report (email-address):
# - @gmail addresses do not seem to work, probably cause/if
#   the server only has 'mailutils' installed
kohalxs_secure_logwatch_reportemail: webmaster@localhost

###############
## Storage: LVM
###############
## LVM support: false/true
kohalxcs_lvm_enabled: false
# LVM-related packages
kohalxcs_lvm_pckgs:
  - lvm2

# Volume group (VG) name: e.g /dev/roi1_vg 
kohalxcs_lvmvg: host_vg 
# Logical volume for host OS (root): /dev/roi1_vg/root
kohalxcs_lvmlv_os: root 
# Logical volume size for host OS (root)
kohalxcs_lvmlv_os_size: 80G
# Logical volume for data (containers): /dev/roi1_vg/data
kohalxcs_lvmlv_data: data 
# Logical volume size for (containers) dir-data
kohalxcs_lvmlv_data_size: +100%FREE
# Filesystem for LV/data
kohalxcs_lvmlv_data_fs: ext4
# Logical volume for zfspool (containers): /dev/roi1_vg/tank
kohalxcs_lvmlv_tank: tank 
# Logical volume size for (containers) zfspool-data
kohalxcs_lvmlv_tank_size: +100%FREE
# Volume/zpool-name for LV/tank
kohalxcs_lvmlv_tank_fs: zfstank
# Logical volume for swap: /dev/roi1_vg/swap_1
kohalxcs_lvmlv_swap: swap_1 
# Logical volume size for swap (e.g RAM size)
kohalxcs_lvmlv_swap_size: 128G 

###############
## Storage: ZFS
###############
## ZFS support: true/false
kohalxcs_zfs_enabled: false
# ZFS-related packages
kohalxcs_zfs_pckgs:
  - zfsutils-linux

# ZFS/zpool name
kohalxcs_zfs_zpool: "{{ kohalxcs_lvmlv_tank_fs | d('zfstank') }}"
# ZFS LXC-root filesystem in LV-'tank'/zpool for LXC-containers'
kohalxcs_zfs_rootdir: lxc

## ###############
## LXC-environment 
## ###############
# - not available/relevant here --> removed for now, check if they are needed?

## ##########################
## LXC: defaults/provisioning
## ##########################
# - most not available/relevant here --> removed for now, check the remaining?

# - container command: kohalxc/mdbenv pckgs installation
# MariaDB-5.5/Mysql-5.5 non-interactive installation (debconf/apt-get)
hostnode_mdbenv_pckginstall: |
  echo "== kohalxc [ansible:mdbenv]: Debconf for non-interactive install of database server (MariaDB-5.5)" | tee -a {{ hostnode_lxcenv_logfile }}
  debconf-set-selections <<< "mariadb-server-5.5 mysql-server/root_password password"
  debconf-set-selections <<< "mariadb-server-5.5 mysql-server/root_password_again password"
  echo "== kohalxc [ansible:mdbenv]: Installing database server (MariaDB-5.5)" | tee -a {{ hostnode_lxcenv_logfile }}
  DEBIAN_FRONTEND=noninteractive apt-get -q -y install mariadb-server-5.5
  mysqladmin ping status -u root | tee -a {{ hostnode_lxcenv_logfile }}

## LXC: template
# - template (distro): Ubuntu
hostnode_lxc_tmpl: ubuntu
# - template/release: Trusty 14.04 LTS
hostnode_lxc_tmpl_release: trusty
# - template/packages: installed to all LXCs
hostnode_lxc_tmpl_pckgs: "wget,joe,nano,python2.7-minimal,git,tig"
# - template/auth_key:
hostnode_lxc_tmpl_authkey: ".ssh/id_rsa.pub"
