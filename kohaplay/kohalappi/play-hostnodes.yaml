---
# File: $KOHALXC_ANSIBLE_PLAYBOOKS/play-hostnodes.yaml
# #############################################################################
# Code is part of KohaLXC/kohatools Ansible/Bash tooling environment  
# for Koha/ILS-development, deployment & database conversion/migration tasks.
# Author: Jukka Aaltonen, Koha-Lappi, Rovaniemi City Library, Lapland/Finland.
# License: GNU General Public License version 3x
#
# Description:
# - play for server host/node environments
# 1. hosts: all (koha-related) server hostnodes (from the inventory)
# 2. pre:
# 3. roles: common, hostnode
#  - 'hostnode' role: create and setup server hosts
#  - initialize 'lxcenv' (create all specified LXCs w/ networking)
#    for LXC-containers to be provisioned to koha-host server nodes.
# 4. post:
#
# #############################################################################

## Hosts
- hosts: hostnodes

  ## gather_facts: False
  gather_facts: True

  ## Vars in files
  #vars_files:
    # Use to inlcude vars outside ansible root
    # - (/absolute/path/of/yaml/file.yaml)

  ## Get vars from user
  #vars_prompt:
  #  - name: userinput_vars
  #    prompt: "Input something?"
  #    tags: hostnode:prerole

  ## Vars
  vars:
    lxcs_names: "{{ lookup('pipe', 'cd roles/hostnode/vars/lxcs; ls -1 | grep -oP \"(?<=lxc-)\\w+(?=.yaml)\" || exit 0') }}"
#    lxcs_names: "{{ lookup('pipe', 'cd roles/hostnode/vars/lxcs; ls -1 | grep -oP \"lxc-\\K\\w+(?=.yaml)\" || echo -n') }}"
    #local_lxcs: "{{ lookup('pipe', 'cd roles/hostnode/vars/lxcs; ls -1 lxc-*.yaml') }}"

  ## Pre-tasks
  pre_tasks:
    - raw: echo "hostnodes(pre_tasks/raw) 'play-hostnodes.yaml'"
    - debug: var=inventory_hostname,hostnode_environment,hostnode_operid,kohalxc_operuser

    # [debug]: List names of (localy defined) LXCs (if any)
    - name: hostnode/pre_tasks - List names of defined LXCs (if any)
      debug: var=lxcs_names,hostnode_lxcs,hostnode_environment
      when:
        - lxcs_names is defined
        - lxcs_names != ""
      tags: hostnode:prerole

    # [debug]: List contents of read vars_files (if any)
    - name: hostnode/pre_tasks - List contents of preset vars (if any)
      debug: var=hostnode_var
      when:
        - hostnode_var is defined
        - userinput_vars is defined
        - userinput_vars == "y"
      tags: hostnode:prerole

  ## Roles
  roles:
    - common
    - hostnode

  # Post-tasks
  post_tasks:
    - raw: echo "In hostnodes(post_tasks/raw) 'play-hostnodes.yaml'"

    # [verbose]: List provisioned LXCs (if any)
    - name: hostnode/post_tasks - List provisioned LXCs (if any)
      debug: var=lxcs_names,hostnode_lxcs,hostnode_environment
      when:
        - lxcs_names is defined or hostnode_lxcs is defined
        - lxcs_names != "" or hostnode_lxcs != ""
      tags: hostnode:postrole

    # [debug]: Show some ssh/connection vars
    #- name: hostnode/post_tasks - Show some ssh/connection vars
    #  debug: var=ansible_host,ansible_port,ansible_user,ansible_become_method,ansible_ssh_common_args,inventory_hostname
    #  tags: hostnode:postrole

    # Add provisionable LXCs as new hosts (grouping them by their domain name) 
    - name: hostnode/post_tasks - Create LXC host for detailed setup/config
      #debug: var=item
      local_action: |
        add_host name="{{ item.lxc.name  + '.' + item.net.domain }}" groups="{{ item.net.domain | d('lxc') }}" ansible_user="{{ kohalxc_operuser }}" ansible_port=22 ansible_become_pass="{{ kohalxc_operpass }}"
#        add_host name="{{ item.lxc.name  + '.' + item.net.domain }}" groups="{{ item.net.domain | d('lxc') }}" ansible_user="{{ kohalxc_operuser | d('default-user') }}" ansible_port=22 ansible_become_method="sudo" ansible_become_pass="{{ kohalxc_operpass | d('default-pass') }}"
      #  add_host name="{{ item.name  + ('lxc.group = weblxc' in item.container_config) | ternary('.weblxc','.mdblxc') | d() }}" groups="{{ ('lxc.group = weblxc' in item.container_config) | ternary('weblxc','mdblxc') | d('lxc') }}" ansible_user="{{ kohalxc_operuser | d('default-user') }}" ansible_port=22 ansible_become_method="sudo" ansible_become_pass="{{ kohalxc_operpass | d('default-user') }}"
#    local_action: add_host name="{{ item.split('.')[0] }}" groups="{{ item.split('.')[-1] | d('lxc') }}"
      with_items: hostnode_lxcs | d()
      when:
      - item is defined and item != ""
      - item.lxc is defined
      - item.net is defined
      - item.lxc.container_config is defined
      - item.net.domain is defined and item.net.domain in inventory_hostname
      tags: hostnode:postrole
